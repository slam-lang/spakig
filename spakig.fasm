format ELF64
section '.text' executable
public _start

addr_0:
addr_1:
addr_2:
addr_3:
addr_4:
addr_5:
addr_6:
addr_7:
addr_8:
addr_9:
addr_10:
addr_11:
addr_12:
    ; - proc len 1 1
addr_13:
    pop rax
    push rax
    push rax
addr_14:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_15:
    mov qword rax, 0
    push rax
addr_16:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_17:
    pop rbx
    test rbx, rbx
    jz addr_19
addr_18:
addr_18_0:
    pop rax
addr_18_1:
    mov qword rax, 0
    push rax
addr_18_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_18_3:
addr_19:
    pop rax
    push rax
    push rax
addr_20:
addr_21:
    mov qword rax, 1
    push rax
addr_22:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23:
    pop rax
    push rax
    push rax
addr_24:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_25:
    pop rbx
    test rbx, rbx
    jz addr_26
    jmp addr_20
addr_26:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_27:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_28:
    pop rax
    pop rbx
    push rax
    push rbx
addr_29:
    pop rax
addr_30:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_31:
addr_32:
addr_33:
    ; - proc print 1 0
addr_34:
    pop rax
    push rax
    push rax
addr_35:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_36
    jmp addr_13
addr_36:
    pop rax
    pop rbx
    push rax
    push rbx
addr_37:
    mov qword rax, 1
    push rax
addr_38:
    mov qword rax, 1
    push rax
addr_39:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40:
    pop rax
addr_41:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_42:
addr_43:
addr_44:
    ; - proc cr 0 0
addr_45:
    push 1
    push str_0
addr_46:
    mov qword rax, 1
    push rax
addr_47:
    mov qword rax, 1
    push rax
addr_48:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_49:
    pop rax
addr_50:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_51:
addr_52:
addr_53:
    ; - proc println 1 0
addr_54:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_55
    jmp addr_34
addr_55:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_56
    jmp addr_45
addr_56:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_57:
addr_58:
addr_59:
    ; - proc eq 2 1
addr_60:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_61:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_62:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_63:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_64:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_65:
    pop rbx
    test rbx, rbx
    jz addr_67
addr_66:
addr_66_0:
    pop rax
addr_66_1:
    pop rax
addr_66_2:
    mov qword rax, 0
    push rax
addr_66_3:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_66_4:
addr_67:
    mov qword rax, 1
    push rax
addr_68:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_69:
    pop rax
    pop rbx
    push rax
    push rbx
addr_70:
    mov qword rax, 1
    push rax
addr_71:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_72:
addr_73:
    mov qword rax, 1
    push rax
addr_74:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_75:
    pop rax
    pop rbx
    push rax
    push rbx
addr_76:
    mov qword rax, 1
    push rax
addr_77:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_78:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_79:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_80:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_81:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_82:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_83:
    mov qword rax, 0
    push rax
addr_84:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_85:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_86:
    mov qword rax, 0
    push rax
addr_87:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_88:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_89:
    pop rbx
    test rbx, rbx
    jz addr_91
addr_90:
addr_90_0:
    pop rax
addr_90_1:
    pop rax
addr_90_2:
    pop rax
addr_90_3:
    pop rax
addr_90_4:
    mov qword rax, 1
    push rax
addr_90_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_90_6:
addr_91:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_92:
    mov qword rax, 0
    push rax
addr_93:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_94:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_95:
    mov qword rax, 0
    push rax
addr_96:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_97:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_98:
    pop rbx
    test rbx, rbx
    jz addr_100
addr_99:
addr_99_0:
    pop rax
addr_99_1:
    pop rax
addr_99_2:
    pop rax
addr_99_3:
    pop rax
addr_99_4:
    mov qword rax, 0
    push rax
addr_99_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_99_6:
addr_100:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_101:
    pop rbx
    test rbx, rbx
    jz addr_102
    jmp addr_72
addr_102:
    pop rax
addr_103:
    pop rax
addr_104:
    mov qword rax, 0
    push rax
addr_105:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_106:
addr_107:
addr_108:
    ; - proc cpy 2 2
addr_109:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_110:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_111:
addr_112:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_113:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_114:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_115:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_116:
    pop rax
addr_117:
    pop rax
    pop rbx
    push rax
    push rbx
addr_118:
    mov qword rax, 1
    push rax
addr_119:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_120:
    pop rax
    pop rbx
    push rax
    push rbx
addr_121:
    mov qword rax, 1
    push rax
addr_122:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_123:
    pop rax
    push rax
    push rax
addr_124:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_125:
    mov qword rax, 0
    push rax
addr_126:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_127:
    pop rbx
    test rbx, rbx
    jz addr_128
    jmp addr_111
addr_128:
    pop rax
    pop rbx
    push rax
    push rbx
addr_129:
    mov qword rax, 1
    push rax
addr_130:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_131:
    mov qword rax, 0
    push rax
addr_132:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_133:
    pop rax
addr_134:
    pop rax
addr_135:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_136:
addr_137:
addr_138:
    ; - proc last 1 1
addr_139:
    mov qword rax, 1
    push rax
addr_140:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_141:
addr_142:
    mov qword rax, 1
    push rax
addr_143:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_144:
    pop rax
    push rax
    push rax
addr_145:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_146:
    mov qword rax, 0
    push rax
addr_147:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_148:
    pop rbx
    test rbx, rbx
    jz addr_149
    jmp addr_141
addr_149:
    mov qword rax, 1
    push rax
addr_150:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_151:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_152:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_153:
addr_154:
addr_155:
    ; - proc clear 1 1
addr_156:
    pop rax
    push rax
    push rax
addr_157:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_158:
    mov qword rax, 0
    push rax
addr_159:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_160:
    pop rbx
    test rbx, rbx
    jz addr_162
addr_161:
addr_161_0:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_161_1:
addr_162:
    pop rax
    push rax
    push rax
addr_163:
addr_164:
    pop rax
    push rax
    push rax
addr_165:
    mov qword rax, 0
    push rax
addr_166:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_167:
    pop rax
addr_168:
    mov qword rax, 1
    push rax
addr_169:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_170:
    pop rax
    push rax
    push rax
addr_171:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_172:
    pop rbx
    test rbx, rbx
    jz addr_173
    jmp addr_163
addr_173:
    pop rax
addr_174:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_175:
addr_176:
addr_177:
    ; - proc cat 2 1
addr_178:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_179:
    pop rax
    push rax
    push rax
addr_180:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_181
    jmp addr_13
addr_181:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_182:
    pop rax
    pop rbx
    push rax
    push rbx
addr_183:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_184
    jmp addr_109
addr_184:
    pop rax
addr_185:
    pop rax
addr_186:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_187:
addr_188:
addr_189:
    ; - proc isnum 1 1
addr_190:
    push mem+0
addr_191:
    mov qword rax, 48
    push rax
addr_192:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_193:
    pop rax
addr_194:
    push mem+1
addr_195:
    mov qword rax, 57
    push rax
addr_196:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_197:
    pop rax
addr_198:
    pop rax
    push rax
    push rax
addr_199:
    pop rax
    push rax
    push rax
addr_200:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_201
    jmp addr_13
addr_201:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_202:
    mov qword rax, 1
    push rax
addr_203:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_204:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_205:
    pop rax
    push rax
    push rax
addr_206:
    mov qword rax, 98
    push rax
addr_207:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_208:
    pop rbx
    test rbx, rbx
    jz addr_210
addr_209:
addr_209_0:
    push mem+1
addr_209_1:
    mov qword rax, 49
    push rax
addr_209_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_209_3:
    pop rax
addr_209_4:
addr_210:
    pop rax
    push rax
    push rax
addr_211:
    mov qword rax, 104
    push rax
addr_212:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_213:
    pop rbx
    test rbx, rbx
    jz addr_215
addr_214:
addr_214_0:
    push mem+1
addr_214_1:
    mov qword rax, 102
    push rax
addr_214_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_214_3:
    pop rax
addr_214_4:
addr_215:
    pop rax
addr_216:
    pop rax
    push rax
    push rax
addr_217:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_218:
    mov qword rax, 45
    push rax
addr_219:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_220:
    pop rbx
    test rbx, rbx
    jz addr_222
addr_221:
addr_221_0:
    mov qword rax, 1
    push rax
addr_221_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_221_2:
addr_222:
addr_223:
    pop rax
    push rax
    push rax
addr_224:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_225:
    pop rax
    push rax
    push rax
addr_226:
    push mem+0
addr_227:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_228:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_229:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_230:
    push mem+1
addr_231:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_232:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_233:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_234:
    pop rbx
    test rbx, rbx
    jz addr_236
addr_235:
addr_235_0:
    pop rax
addr_235_1:
    pop rax
    push rax
    push rax
addr_235_2:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_235_3:
    mov qword rax, 98
    push rax
addr_235_4:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_235_5:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_235_6:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_235_7:
    mov qword rax, 104
    push rax
addr_235_8:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_235_9:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_235_10:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_235_11:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_235_12
    jmp addr_13
addr_235_12:
    mov qword rax, 1
    push rax
addr_235_13:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_235_14:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_235_15:
    pop rax
    pop rbx
    push rax
    push rbx
addr_235_16:
    pop rax
addr_235_17:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_235_18:
addr_236:
    pop rax
addr_237:
    mov qword rax, 1
    push rax
addr_238:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_239:
    pop rax
    push rax
    push rax
addr_240:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_241:
    mov qword rax, 0
    push rax
addr_242:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_243:
    pop rbx
    test rbx, rbx
    jz addr_244
    jmp addr_222
addr_244:
    pop rax
addr_245:
    mov qword rax, 1
    push rax
addr_246:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_247:
addr_248:
addr_249:
    ; - proc tonum 1 1
addr_250:
    pop rax
    push rax
    push rax
addr_251:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_252
    jmp addr_190
addr_252:
    pop rax
    xor rax, 1
    push rax
addr_253:
    pop rbx
    test rbx, rbx
    jz addr_255
addr_254:
addr_254_0:
    pop rax
    push rax
    push rax
addr_254_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_254_2
    jmp addr_54
addr_254_2:
    push str_1
addr_254_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_254_4
    jmp addr_54
addr_254_4:
    pop rax
addr_254_5:
    mov qword rax, -1
    push rax
addr_254_6:
    mov rax, 60
    pop rdi
    syscall
addr_254_7:
addr_255:
    push mem+2
addr_256:
    mov qword rax, 10
    push rax
addr_257:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_258:
    pop rax
addr_259:
    pop rax
    push rax
    push rax
addr_260:
    pop rax
    push rax
    push rax
addr_261:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_262
    jmp addr_13
addr_262:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_263:
    mov qword rax, 1
    push rax
addr_264:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_265:
    pop rax
    push rax
    push rax
addr_266:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_267:
    mov qword rax, 98
    push rax
addr_268:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_269:
    pop rbx
    test rbx, rbx
    jz addr_271
addr_270:
addr_270_0:
    push mem+2
addr_270_1:
    mov qword rax, 2
    push rax
addr_270_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_270_3:
    pop rax
addr_270_4:
addr_271:
    pop rax
    push rax
    push rax
addr_272:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_273:
    mov qword rax, 104
    push rax
addr_274:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_275:
    pop rbx
    test rbx, rbx
    jz addr_277
addr_276:
addr_276_0:
    push mem+2
addr_276_1:
    mov qword rax, 16
    push rax
addr_276_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_276_3:
    pop rax
addr_276_4:
addr_277:
    pop rax
addr_278:
    mov qword rax, 0
    push rax
addr_279:
addr_280:
    push mem+2
addr_281:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_282:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_283:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_284:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_285:
    pop rax
    push rax
    push rax
addr_286:
    mov qword rax, 70
    push rax
addr_287:
    mov qword rax, 1
    push rax
addr_288:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_289:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_290:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_291:
    mov qword rax, 65
    push rax
addr_292:
    mov qword rax, 1
    push rax
addr_293:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_294:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_295:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_296:
    pop rbx
    test rbx, rbx
    jz addr_298
addr_297:
addr_297_0:
    mov qword rax, 65
    push rax
addr_297_1:
    mov qword rax, 10
    push rax
addr_297_2:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_297_3:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_297_4:
    mov qword rax, 48
    push rax
addr_297_5:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_297_6:
addr_298:
    mov qword rax, 48
    push rax
addr_299:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_300:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_301:
    pop rax
    pop rbx
    push rax
    push rbx
addr_302:
    mov qword rax, 1
    push rax
addr_303:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_304:
    pop rax
    pop rbx
    push rax
    push rbx
addr_305:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_306:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_307:
    pop rax
    push rax
    push rax
addr_308:
    mov qword rax, 0
    push rax
addr_309:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_310:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_311:
    mov qword rax, 98
    push rax
addr_312:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_313:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_314:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_315:
    mov qword rax, 104
    push rax
addr_316:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_317:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_318:
    pop rax
    pop rbx
    push rax
    push rbx
addr_319:
    pop rax
addr_320:
    pop rbx
    test rbx, rbx
    jz addr_321
    jmp addr_279
addr_321:
    pop rax
    pop rbx
    push rax
    push rbx
addr_322:
    pop rax
addr_323:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_324:
addr_325:
addr_326:
addr_327:
addr_328:
    ; - proc split 3 2
addr_329:
    pop rax
    pop rbx
    push rax
    push rbx
addr_330:
    push mem+3
addr_331:
    pop rax
    pop rbx
    push rax
    push rbx
addr_332:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_333:
    pop rax
addr_334:
    push mem+4
addr_335:
    pop rax
    pop rbx
    push rax
    push rbx
addr_336:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_337:
    pop rax
addr_338:
    push mem+4
addr_339:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_340:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_341
    jmp addr_156
addr_341:
addr_342:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_343:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_344:
    push mem+3
addr_345:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_346:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_347:
    pop rbx
    test rbx, rbx
    jz addr_349
addr_348:
addr_348_0:
    pop rax
addr_348_1:
    mov qword rax, 1
    push rax
addr_348_2:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_348_3:
    push mem+4
addr_348_4:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_348_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_348_6:
addr_349:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_350:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_351:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_352:
    pop rax
    pop rbx
    push rax
    push rbx
addr_353:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_354:
    pop rax
addr_355:
    pop rax
    pop rbx
    push rax
    push rbx
addr_356:
    mov qword rax, 1
    push rax
addr_357:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_358:
    pop rax
    pop rbx
    push rax
    push rbx
addr_359:
    mov qword rax, 1
    push rax
addr_360:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_361:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_362:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_363:
    mov qword rax, 0
    push rax
addr_364:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_365:
    pop rbx
    test rbx, rbx
    jz addr_366
    jmp addr_341
addr_366:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_367:
addr_368:
addr_369:
addr_370:
addr_371:
addr_372:
addr_373:
addr_374:
    ; - proc gettmp 0 1
addr_375:
    push mem+20
addr_376:
    mov qword rax, 30
    push rax
addr_377:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_378:
    push mem+12
addr_379:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_380:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_381:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_382:
addr_383:
addr_384:
    ; - proc inctmpidx 0 0
addr_385:
    push mem+12
addr_386:
    push mem+12
addr_387:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_388:
    mov qword rax, 1
    push rax
addr_389:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_390:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_391:
    pop rax
addr_392:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_393:
addr_394:
addr_395:
    ; - proc cstr 1 1
addr_396:
addr_397:
    mov qword rax, 10
    push rax
addr_398:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_399:
    mov qword rax, 48
    push rax
addr_400:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_401:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_402
    jmp addr_375
addr_402:
    pop rax
    pop rbx
    push rax
    push rbx
addr_403:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_404:
    pop rax
addr_405:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_406
    jmp addr_385
addr_406:
    pop rax
    push rax
    push rax
addr_407:
    mov qword rax, 0
    push rax
addr_408:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_409:
    pop rbx
    test rbx, rbx
    jz addr_410
    jmp addr_396
addr_410:
    pop rax
addr_411:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_412
    jmp addr_375
addr_412:
    mov qword rax, 1
    push rax
addr_413:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_414:
    push mem+12
addr_415:
    mov qword rax, 0
    push rax
addr_416:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_417:
    pop rax
addr_418:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_419:
addr_420:
addr_421:
    ; - proc cstrhex 1 1
addr_422:
addr_423:
    mov qword rax, 16
    push rax
addr_424:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_425:
    pop rax
    push rax
    push rax
addr_426:
    mov qword rax, 9
    push rax
addr_427:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_428:
    pop rbx
    test rbx, rbx
    jz addr_430
addr_429:
addr_429_0:
    mov qword rax, 97
    push rax
addr_429_1:
    mov qword rax, 10
    push rax
addr_429_2:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_429_3:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_429_4:
addr_430:
    pop rax
    push rax
    push rax
addr_431:
    mov qword rax, 10
    push rax
addr_432:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_433:
    pop rbx
    test rbx, rbx
    jz addr_435
addr_434:
addr_434_0:
    mov qword rax, 48
    push rax
addr_434_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_434_2:
addr_435:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_436
    jmp addr_375
addr_436:
    pop rax
    pop rbx
    push rax
    push rbx
addr_437:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_438:
    pop rax
addr_439:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_440
    jmp addr_385
addr_440:
    pop rax
    push rax
    push rax
addr_441:
    mov qword rax, 0
    push rax
addr_442:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_443:
    pop rbx
    test rbx, rbx
    jz addr_444
    jmp addr_422
addr_444:
    pop rax
addr_445:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_446
    jmp addr_375
addr_446:
    mov qword rax, 36
    push rax
addr_447:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_448:
    pop rax
addr_449:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_450
    jmp addr_385
addr_450:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_451
    jmp addr_375
addr_451:
    mov qword rax, 1
    push rax
addr_452:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_453:
    push mem+12
addr_454:
    mov qword rax, 0
    push rax
addr_455:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_456:
    pop rax
addr_457:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_458:
addr_459:
addr_460:
    ; - proc print 1 0
addr_461:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_462
    jmp addr_396
addr_462:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_463
    jmp addr_34
addr_463:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_464
    jmp addr_45
addr_464:
    push mem+12
addr_465:
    mov qword rax, 0
    push rax
addr_466:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_467:
    pop rax
addr_468:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_469:
addr_470:
addr_471:
    ; - proc printhex 1 0
addr_472:
addr_473:
    mov qword rax, 16
    push rax
addr_474:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_475:
    pop rax
    push rax
    push rax
addr_476:
    mov qword rax, 9
    push rax
addr_477:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_478:
    pop rbx
    test rbx, rbx
    jz addr_480
addr_479:
addr_479_0:
    mov qword rax, 97
    push rax
addr_479_1:
    mov qword rax, 10
    push rax
addr_479_2:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_479_3:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_479_4:
addr_480:
    pop rax
    push rax
    push rax
addr_481:
    mov qword rax, 10
    push rax
addr_482:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_483:
    pop rbx
    test rbx, rbx
    jz addr_485
addr_484:
addr_484_0:
    mov qword rax, 48
    push rax
addr_484_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_484_2:
addr_485:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_486
    jmp addr_375
addr_486:
    pop rax
    pop rbx
    push rax
    push rbx
addr_487:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_488:
    pop rax
addr_489:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_490
    jmp addr_385
addr_490:
    pop rax
    push rax
    push rax
addr_491:
    mov qword rax, 0
    push rax
addr_492:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_493:
    pop rbx
    test rbx, rbx
    jz addr_494
    jmp addr_472
addr_494:
    pop rax
addr_495:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_496
    jmp addr_375
addr_496:
    mov qword rax, 120
    push rax
addr_497:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_498:
    pop rax
addr_499:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_500
    jmp addr_385
addr_500:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_501
    jmp addr_375
addr_501:
    mov qword rax, 48
    push rax
addr_502:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_503:
    pop rax
addr_504:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_505
    jmp addr_385
addr_505:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_506
    jmp addr_375
addr_506:
    mov qword rax, 1
    push rax
addr_507:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_508:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_509
    jmp addr_34
addr_509:
    push mem+12
addr_510:
    mov qword rax, 0
    push rax
addr_511:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_512:
    pop rax
addr_513:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_514
    jmp addr_45
addr_514:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_515:
addr_516:
addr_517:
addr_518:
    ; - proc / 2 1
addr_519:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_520:
    pop rax
addr_521:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_522:
addr_523:
addr_524:
    ; - proc % 2 1
addr_525:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_526:
    pop rax
    pop rbx
    push rax
    push rbx
addr_527:
    pop rax
addr_528:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_529:
addr_530:
addr_531:
addr_532:
addr_533:
addr_534:
addr_535:
addr_536:
addr_537:
addr_538:
addr_539:
addr_540:
    ; - proc isentry 1 1
addr_541:
    pop rax
    push rax
    push rax
addr_542:
    pop rax
    push rax
    push rax
addr_543:
    mov qword rax, 0
    push rax
addr_544:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_545:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_546:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_547:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_548:
    mov qword rax, 8
    push rax
addr_549:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_550:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_551:
    mov qword rax, 1
    push rax
addr_552:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_553:
    mov qword rax, 0
    push rax
addr_554:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_555:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_556:
    pop rax
    pop rbx
    push rax
    push rbx
addr_557:
    pop rax
addr_558:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_559:
addr_560:
addr_561:
addr_562:
addr_563:
addr_564:
    ; - proc cpy 3 0
addr_565:
    push mem+52
addr_566:
    pop rax
    pop rbx
    push rax
    push rbx
addr_567:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_568:
    pop rax
addr_569:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_570:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_571:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_572:
    pop rbx
    test rbx, rbx
    jz addr_574
addr_573:
addr_573_0:
    pop rax
addr_573_1:
    pop rax
addr_573_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_573_3:
addr_574:
addr_575:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_576:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_577:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_578:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_579:
    pop rax
addr_580:
    pop rax
    pop rbx
    push rax
    push rbx
addr_581:
    mov qword rax, 1
    push rax
addr_582:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_583:
    pop rax
    pop rbx
    push rax
    push rbx
addr_584:
    mov qword rax, 1
    push rax
addr_585:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_586:
    push mem+52
addr_587:
    pop rax
    push rax
    push rax
addr_588:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_589:
    mov qword rax, 1
    push rax
addr_590:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_591:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_592:
    pop rax
addr_593:
    push mem+52
addr_594:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_595:
    mov qword rax, 0
    push rax
addr_596:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_597:
    pop rbx
    test rbx, rbx
    jz addr_598
    jmp addr_574
addr_598:
    pop rax
addr_599:
    pop rax
addr_600:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_601:
addr_602:
addr_603:
    ; - proc eq 3 1
addr_604:
    pop rax
    pop rbx
    push rax
    push rbx
addr_605:
    push mem+52
addr_606:
    pop rax
    pop rbx
    push rax
    push rbx
addr_607:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_608:
    pop rax
addr_609:
addr_610:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_611:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_612:
    push mem+52
addr_613:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_614:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_615:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_616:
    pop rbx
    test rbx, rbx
    jz addr_618
addr_617:
addr_617_0:
    pop rax
addr_617_1:
    pop rax
addr_617_2:
    mov qword rax, 0
    push rax
addr_617_3:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_617_4:
addr_618:
    pop rax
    pop rbx
    push rax
    push rbx
addr_619:
    mov qword rax, 1
    push rax
addr_620:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_621:
    pop rax
    pop rbx
    push rax
    push rbx
addr_622:
    mov qword rax, 1
    push rax
addr_623:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_624:
    push mem+52
addr_625:
    pop rax
    push rax
    push rax
addr_626:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_627:
    mov qword rax, 1
    push rax
addr_628:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_629:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_630:
    pop rax
addr_631:
    pop rax
    push rax
    push rax
addr_632:
    mov qword rax, 0
    push rax
addr_633:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_634:
    pop rbx
    test rbx, rbx
    jz addr_635
    jmp addr_609
addr_635:
    pop rax
addr_636:
    pop rax
addr_637:
    mov qword rax, 1
    push rax
addr_638:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_639:
addr_640:
addr_641:
    ; - proc zero 2 0
addr_642:
    push mem+52
addr_643:
    pop rax
    pop rbx
    push rax
    push rbx
addr_644:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_645:
    pop rax
addr_646:
addr_647:
    pop rax
    push rax
    push rax
addr_648:
    mov qword rax, 0
    push rax
addr_649:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_650:
    pop rax
addr_651:
    mov qword rax, 1
    push rax
addr_652:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_653:
    push mem+52
addr_654:
    push mem+52
addr_655:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_656:
    mov qword rax, 1
    push rax
addr_657:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_658:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_659:
    pop rax
addr_660:
    push mem+52
addr_661:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_662:
    mov qword rax, 0
    push rax
addr_663:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_664:
    pop rbx
    test rbx, rbx
    jz addr_665
    jmp addr_646
addr_665:
    pop rax
addr_666:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_667:
addr_668:
addr_669:
addr_670:
addr_671:
addr_672:
addr_673:
addr_674:
addr_675:
addr_676:
addr_677:
addr_678:
    ; - proc allocpage 0 0
addr_679:
    push mem+68
addr_680:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_681:
    mov qword rax, 64000
    push rax
addr_682:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_683:
    pop rax
    push rax
    push rax
addr_684:
    push mem+68
addr_685:
    pop rax
    pop rbx
    push rax
    push rbx
addr_686:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_687:
    pop rax
addr_688:
    mov qword rax, 12
    push rax
addr_689:
    pop rax
    pop rdi
    syscall
    push rax
addr_690:
    mov qword rax, 0
    push rax
addr_691:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_692:
    pop rbx
    test rbx, rbx
    jz addr_694
addr_693:
addr_693_0:
    push str_2
addr_693_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_693_2
    jmp addr_54
addr_693_2:
addr_694:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_695:
addr_696:
addr_697:
    ; - proc init 0 0
addr_698:
    push mem+92
addr_699:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_700:
    pop rbx
    test rbx, rbx
    jz addr_702
addr_701:
addr_701_0:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_701_1:
addr_702:
    push mem+92
addr_703:
    mov qword rax, 1
    push rax
addr_704:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_705:
    pop rax
addr_706:
    push mem+60
addr_707:
    mov qword rax, 0
    push rax
addr_708:
    mov qword rax, 12
    push rax
addr_709:
    pop rax
    pop rdi
    syscall
    push rax
addr_710:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_711:
    pop rax
addr_712:
    push mem+68
addr_713:
    push mem+60
addr_714:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_715:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_716:
    pop rax
addr_717:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_718
    jmp addr_679
addr_718:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_719:
addr_720:
addr_721:
    ; - proc map 0 0
addr_722:
    push mem+84
addr_723:
    mov qword rax, 0
    push rax
addr_724:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_725:
    pop rax
addr_726:
    push str_3
addr_727:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_728
    jmp addr_54
addr_728:
    push str_4
addr_729:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_730
    jmp addr_54
addr_730:
    push str_5
addr_731:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_732
    jmp addr_34
addr_732:
    push mem+68
addr_733:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_734:
    push mem+60
addr_735:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_736:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_737:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_738
    jmp addr_461
addr_738:
    push mem+60
addr_739:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_740:
    mov qword rax, 128
    push rax
addr_741:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_742:
addr_743:
    mov qword rax, 128
    push rax
addr_744:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_745:
    pop rax
    push rax
    push rax
addr_746:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_747
    jmp addr_541
addr_747:
    pop rbx
    test rbx, rbx
    jz addr_749
addr_748:
addr_748_0:
    push str_6
addr_748_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_748_2
    jmp addr_54
addr_748_2:
    push str_7
addr_748_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_748_4
    jmp addr_34
addr_748_4:
    pop rax
    push rax
    push rax
addr_748_5:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_748_6
    jmp addr_472
addr_748_6:
    push str_8
addr_748_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_748_8
    jmp addr_34
addr_748_8:
    pop rax
    push rax
    push rax
addr_748_9:
    mov qword rax, 9
    push rax
addr_748_10:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_748_11:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_748_12:
    pop rax
    push rax
    push rax
addr_748_13:
    push mem+84
addr_748_14:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_748_15:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_748_16:
    push mem+84
addr_748_17:
    pop rax
    pop rbx
    push rax
    push rbx
addr_748_18:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_748_19:
    pop rax
addr_748_20:
    pop rax
    push rax
    push rax
addr_748_21:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_748_22
    jmp addr_461
addr_748_22:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_748_23:
    mov qword rax, 128
    push rax
addr_748_24:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_748_25:
addr_749:
    pop rax
    push rax
    push rax
addr_750:
    push mem+68
addr_751:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_752:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_753:
    pop rbx
    test rbx, rbx
    jz addr_754
    jmp addr_742
addr_754:
    pop rax
addr_755:
    push str_9
addr_756:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_757
    jmp addr_34
addr_757:
    push mem+84
addr_758:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_759:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_760
    jmp addr_461
addr_760:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_761
    jmp addr_45
addr_761:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_762:
addr_763:
addr_764:
    ; - proc alloc 1 1
addr_765:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_766
    jmp addr_698
addr_766:
    mov qword rax, 17
    push rax
addr_767:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_768:
    pop rax
    push rax
    push rax
addr_769:
    mov qword rax, 128
    push rax
addr_770:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_771:
    pop rax
    pop rbx
    push rax
    push rbx
addr_772:
    pop rax
addr_773:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_774:
    mov qword rax, 128
    push rax
addr_775:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_776:
    push mem+76
addr_777:
    pop rax
    pop rbx
    push rax
    push rbx
addr_778:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_779:
    pop rax
addr_780:
    mov qword rax, 0
    push rax
addr_781:
    push mem+60
addr_782:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_783:
    pop rax
    pop rbx
    push rax
    push rbx
addr_784:
    mov qword rax, 128
    push rax
addr_785:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_786:
    pop rax
    pop rbx
    push rax
    push rbx
addr_787:
    mov qword rax, 128
    push rax
addr_788:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_789:
addr_790:
    pop rax
    pop rbx
    push rax
    push rbx
addr_791:
    mov qword rax, 128
    push rax
addr_792:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_793:
    pop rax
    pop rbx
    push rax
    push rbx
addr_794:
    mov qword rax, 128
    push rax
addr_795:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_796:
    pop rax
    push rax
    push rax
addr_797:
    push mem+68
addr_798:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_799:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_800:
    pop rax
    xor rax, 1
    push rax
addr_801:
    pop rbx
    test rbx, rbx
    jz addr_803
addr_802:
addr_802_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_802_1
    jmp addr_679
addr_802_1:
addr_803:
    pop rax
    push rax
    push rax
addr_804:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_805
    jmp addr_541
addr_805:
    pop rbx
    test rbx, rbx
    jz addr_807
addr_806:
addr_806_0:
    pop rax
    push rax
    push rax
addr_806_1:
    mov qword rax, 9
    push rax
addr_806_2:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_806_3:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_806_4:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_806_5:
    pop rax
    pop rbx
    push rax
    push rbx
addr_806_6:
    pop rax
addr_806_7:
    mov qword rax, 0
    push rax
addr_806_8:
    mov qword rax, 128
    push rax
addr_806_9:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_806_10:
    pop rax
    pop rbx
    push rax
    push rbx
addr_806_11:
    mov qword rax, 128
    push rax
addr_806_12:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_806_13:
addr_807:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_808:
    push mem+76
addr_809:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_810:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_811:
    pop rbx
    test rbx, rbx
    jz addr_812
    jmp addr_789
addr_812:
    pop rax
    pop rbx
    push rax
    push rbx
addr_813:
    pop rax
addr_814:
    push mem+76
addr_815:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_816:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_817:
    pop rax
    push rax
    push rax
addr_818:
    mov qword rax, 9
    push rax
addr_819:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_820:
    push mem+76
addr_821:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_822:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_823:
    pop rax
addr_824:
    pop rax
    push rax
    push rax
addr_825:
    pop rax
    push rax
    push rax
addr_826:
    mov qword rax, 0
    push rax
addr_827:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_828:
    pop rax
    pop rbx
    push rax
    push rbx
addr_829:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_830:
    pop rax
addr_831:
    pop rax
    push rax
    push rax
addr_832:
    mov qword rax, 8
    push rax
addr_833:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_834:
    mov qword rax, 1
    push rax
addr_835:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_836:
    pop rax
addr_837:
    mov qword rax, 17
    push rax
addr_838:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_839:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_840:
addr_841:
addr_842:
    ; - proc zalloc 1 1
addr_843:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_844
    jmp addr_698
addr_844:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_845
    jmp addr_765
addr_845:
    pop rax
    push rax
    push rax
addr_846:
    pop rax
    push rax
    push rax
addr_847:
    mov qword rax, 17
    push rax
addr_848:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_849:
    mov qword rax, 9
    push rax
addr_850:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_851:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_852:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_853
    jmp addr_642
addr_853:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_854:
addr_855:
addr_856:
    ; - proc free 1 0
addr_857:
    mov qword rax, 17
    push rax
addr_858:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_859:
    pop rax
    push rax
    push rax
addr_860:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_861
    jmp addr_541
addr_861:
    pop rax
    xor rax, 1
    push rax
addr_862:
    pop rbx
    test rbx, rbx
    jz addr_864
addr_863:
addr_863_0:
    push str_10
addr_863_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_863_2
    jmp addr_54
addr_863_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_863_3
    jmp addr_472
addr_863_3:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_863_4:
addr_864:
    mov qword rax, 8
    push rax
addr_865:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_866:
    mov qword rax, 0
    push rax
addr_867:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_868:
    pop rax
addr_869:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_870:
addr_871:
addr_872:
    ; - proc tryfree 1 0
addr_873:
    mov qword rax, 17
    push rax
addr_874:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_875:
    pop rax
    push rax
    push rax
addr_876:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_877
    jmp addr_541
addr_877:
    pop rax
    xor rax, 1
    push rax
addr_878:
    pop rbx
    test rbx, rbx
    jz addr_880
addr_879:
addr_879_0:
    pop rax
addr_879_1:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_879_2:
addr_880:
    mov qword rax, 8
    push rax
addr_881:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_882:
    mov qword rax, 0
    push rax
addr_883:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_884:
    pop rax
addr_885:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_886:
addr_887:
addr_888:
addr_889:
addr_890:
    ; - proc realloc 2 1
addr_891:
    mov qword rax, 17
    push rax
addr_892:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_893:
    pop rax
    push rax
    push rax
addr_894:
    mov qword rax, 128
    push rax
addr_895:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_896:
    pop rax
    pop rbx
    push rax
    push rbx
addr_897:
    pop rax
addr_898:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_899:
    mov qword rax, 128
    push rax
addr_900:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_901:
    push mem+76
addr_902:
    pop rax
    pop rbx
    push rax
    push rbx
addr_903:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_904:
    pop rax
addr_905:
    pop rax
    push rax
    push rax
addr_906:
    mov qword rax, 17
    push rax
addr_907:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_908:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_909
    jmp addr_541
addr_909:
    pop rax
    xor rax, 1
    push rax
addr_910:
    pop rbx
    test rbx, rbx
    jz addr_912
addr_911:
addr_911_0:
    push str_11
addr_911_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_911_2
    jmp addr_54
addr_911_2:
    pop rax
    push rax
    push rax
addr_911_3:
    mov qword rax, 17
    push rax
addr_911_4:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_911_5:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_911_6
    jmp addr_472
addr_911_6:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_911_7:
addr_912:
    pop rax
    push rax
    push rax
addr_913:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_914
    jmp addr_857
addr_914:
    push mem+93
addr_915:
    push mem+76
addr_916:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_917:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_918
    jmp addr_765
addr_918:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_919:
    pop rax
addr_920:
    push mem+93
addr_921:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_922:
    pop rax
    pop rbx
    push rax
    push rbx
addr_923:
    pop rax
    push rax
    push rax
addr_924:
    mov qword rax, 17
    push rax
addr_925:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_926:
    mov qword rax, 9
    push rax
addr_927:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_928:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_929:
    mov qword rax, 17
    push rax
addr_930:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_931:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_932
    jmp addr_565
addr_932:
    push mem+93
addr_933:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_934:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_935:
addr_936:
addr_937:
addr_938:
addr_939:
addr_940:
addr_941:
addr_942:
addr_943:
addr_944:
addr_945:
addr_946:
addr_947:
addr_948:
addr_949:
    ; - proc level 2 0
addr_950:
    push mem+117
addr_951:
    mov qword rax, 0
    push rax
addr_952:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_953:
    pop rax
    pop rbx
    push rax
    push rbx
addr_954:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_955:
    pop rax
addr_956:
    push mem+117
addr_957:
    mov qword rax, 8
    push rax
addr_958:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_959:
    pop rax
    pop rbx
    push rax
    push rbx
addr_960:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_961:
    pop rax
addr_962:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_963:
addr_964:
addr_965:
    ; - proc msg 2 0
addr_966:
    push mem+117
addr_967:
    mov qword rax, 13
    push rax
addr_968:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_969:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_970
    jmp addr_156
addr_970:
    pop rax
    pop rbx
    push rax
    push rbx
addr_971:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_972
    jmp addr_109
addr_972:
    pop rax
addr_973:
    pop rax
addr_974:
    push mem+117
addr_975:
    mov qword rax, 9
    push rax
addr_976:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_977:
    pop rax
    pop rbx
    push rax
    push rbx
addr_978:
    mov qword rax, 3
    push rax
addr_979:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_980
    jmp addr_565
addr_980:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_981:
addr_982:
addr_983:
    ; - proc cat 1 0
addr_984:
    push mem+117
addr_985:
    mov qword rax, 13
    push rax
addr_986:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_987:
    pop rax
    pop rbx
    push rax
    push rbx
addr_988:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_989
    jmp addr_178
addr_989:
    pop rax
addr_990:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_991:
addr_992:
addr_993:
    ; - proc log 0 0
addr_994:
    push mem+117
addr_995:
    mov qword rax, 8
    push rax
addr_996:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_997:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_998:
    pop rax
    push rax
    push rax
addr_999:
    mov qword rax, 1
    push rax
addr_1000:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1001:
    pop rbx
    test rbx, rbx
    jz addr_1003
addr_1002:
addr_1002_0:
    push str_12
addr_1002_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1002_2
    jmp addr_34
addr_1002_2:
    push str_13
addr_1002_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1002_4
    jmp addr_34
addr_1002_4:
    push mem+117
addr_1002_5:
    mov qword rax, 9
    push rax
addr_1002_6:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1002_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1002_8
    jmp addr_34
addr_1002_8:
    push str_14
addr_1002_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1002_10
    jmp addr_34
addr_1002_10:
    push mem+117
addr_1002_11:
    mov qword rax, 13
    push rax
addr_1002_12:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1002_13:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1002_14
    jmp addr_34
addr_1002_14:
    push str_15
addr_1002_15:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1002_16
    jmp addr_54
addr_1002_16:
    pop rax
addr_1002_17:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1002_18:
addr_1003:
    pop rax
    push rax
    push rax
addr_1004:
    mov qword rax, 2
    push rax
addr_1005:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1006:
    pop rbx
    test rbx, rbx
    jz addr_1008
addr_1007:
addr_1007_0:
    push str_16
addr_1007_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1007_2
    jmp addr_34
addr_1007_2:
    push str_17
addr_1007_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1007_4
    jmp addr_34
addr_1007_4:
    push mem+117
addr_1007_5:
    mov qword rax, 9
    push rax
addr_1007_6:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1007_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1007_8
    jmp addr_34
addr_1007_8:
    push str_18
addr_1007_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1007_10
    jmp addr_34
addr_1007_10:
    push mem+117
addr_1007_11:
    mov qword rax, 13
    push rax
addr_1007_12:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1007_13:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1007_14
    jmp addr_34
addr_1007_14:
    push str_19
addr_1007_15:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1007_16
    jmp addr_54
addr_1007_16:
    pop rax
addr_1007_17:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1007_18:
addr_1008:
    pop rax
    push rax
    push rax
addr_1009:
    mov qword rax, 3
    push rax
addr_1010:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1011:
    pop rbx
    test rbx, rbx
    jz addr_1013
addr_1012:
addr_1012_0:
    push str_20
addr_1012_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1012_2
    jmp addr_34
addr_1012_2:
    push str_21
addr_1012_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1012_4
    jmp addr_34
addr_1012_4:
    push mem+117
addr_1012_5:
    mov qword rax, 9
    push rax
addr_1012_6:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1012_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1012_8
    jmp addr_34
addr_1012_8:
    push str_22
addr_1012_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1012_10
    jmp addr_34
addr_1012_10:
    push mem+117
addr_1012_11:
    mov qword rax, 13
    push rax
addr_1012_12:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1012_13:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1012_14
    jmp addr_34
addr_1012_14:
    push str_23
addr_1012_15:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1012_16
    jmp addr_54
addr_1012_16:
    pop rax
addr_1012_17:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1012_18:
addr_1013:
    pop rax
addr_1014:
    push str_24
addr_1015:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1016
    jmp addr_34
addr_1016:
    push mem+117
addr_1017:
    mov qword rax, 9
    push rax
addr_1018:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1019:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1020
    jmp addr_34
addr_1020:
    push str_25
addr_1021:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1022
    jmp addr_34
addr_1022:
    push mem+117
addr_1023:
    mov qword rax, 13
    push rax
addr_1024:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1025:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1026
    jmp addr_54
addr_1026:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1027:
addr_1028:
addr_1029:
addr_1030:
addr_1031:
addr_1032:
addr_1033:
    ; - enum
addr_1034:
addr_1035:
addr_1036:
    ; - enum
addr_1037:
addr_1038:
addr_1039:
addr_1040:
addr_1041:
addr_1042:
addr_1043:
addr_1044:
addr_1045:
addr_1046:
addr_1047:
addr_1048:
addr_1049:
addr_1050:
addr_1051:
addr_1052:
addr_1053:
addr_1054:
addr_1055:
addr_1056:
addr_1057:
addr_1058:
addr_1059:
addr_1060:
addr_1061:
addr_1062:
addr_1063:
addr_1064:
addr_1065:
addr_1066:
addr_1067:
addr_1068:
addr_1069:
addr_1070:
addr_1071:
addr_1072:
    ; - proc fork 0 1
addr_1073:
    mov qword rax, 57
    push rax
addr_1074:
    pop rax
    syscall
    push rax
addr_1075:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1076:
addr_1077:
addr_1078:
    ; - proc chkdeverr 1 0
addr_1079:
    mov qword rax, 0
    push rax
addr_1080:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1081:
    pop rax
    xor rax, 1
    push rax
addr_1082:
    pop rbx
    test rbx, rbx
    jz addr_1084
addr_1083:
addr_1083_0:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1083_1:
addr_1084:
    push str_26
addr_1085:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1086
    jmp addr_54
addr_1086:
    mov qword rax, -1
    push rax
addr_1087:
    mov rax, 60
    pop rdi
    syscall
addr_1088:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1089:
addr_1090:
addr_1091:
    ; - proc fexists 1 1
addr_1092:
    push mem+253
addr_1093:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1094:
    mov qword rax, 4
    push rax
addr_1095:
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_1096:
    mov qword rax, 0
    push rax
addr_1097:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1098:
    pop rax
    xor rax, 1
    push rax
addr_1099:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1100:
addr_1101:
addr_1102:
    ; - proc execcmd 1 0
addr_1103:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1104
    jmp addr_1073
addr_1104:
    pop rax
    push rax
    push rax
addr_1105:
    mov qword rax, 0
    push rax
addr_1106:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1107:
    pop rbx
    test rbx, rbx
    jz addr_1109
addr_1108:
addr_1108_0:
    mov qword rax, 1
    push rax
addr_1108_1:
    mov qword rax, 0
    push rax
addr_1108_2:
    mov qword rax, 0
    push rax
addr_1108_3:
    push str_27
addr_1108_4:
    mov qword rax, -100
    push rax
addr_1108_5:
    mov qword rax, 257
    push rax
addr_1108_6:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_1108_7:
    pop rax
    push rax
    push rax
addr_1108_8:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1108_9
    jmp addr_1079
addr_1108_9:
    mov qword rax, 33
    push rax
addr_1108_10:
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_1108_11:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1108_12
    jmp addr_1079
addr_1108_12:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1108_13:
    mov rax, [args_ptr]
    mov rax, [rax]
    add rax, 2
    shl rax, 3
    mov rbx, [args_ptr]
    add rbx, rax
    push rbx
addr_1108_14:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1108_15:
    pop rax
    push rax
    push rax
addr_1108_16:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1108_17:
    mov qword rax, 59
    push rax
addr_1108_18:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1108_19:
    pop rax
addr_1108_20:
    pop rax
addr_1108_21:
    pop rax
addr_1108_22:
    mov qword rax, -1
    push rax
addr_1108_23:
    mov rax, 60
    pop rdi
    syscall
addr_1108_24:
addr_1109:
    pop rax
    push rax
    push rax
addr_1110:
    mov qword rax, 0
    push rax
addr_1111:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1112:
    pop rbx
    test rbx, rbx
    jz addr_1114
addr_1113:
addr_1113_0:
    mov qword rax, 0
    push rax
addr_1113_1:
    mov qword rax, 0
    push rax
addr_1113_2:
    push mem+245
addr_1113_3:
    mov qword rax, -1
    push rax
addr_1113_4:
    mov qword rax, 61
    push rax
addr_1113_5:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_1113_6:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1113_7
    jmp addr_1079
addr_1113_7:
    pop rax
addr_1113_8:
    pop rax
addr_1113_9:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1113_10:
addr_1114:
    mov qword rax, 0
    push rax
addr_1115:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1116:
    pop rbx
    test rbx, rbx
    jz addr_1118
addr_1117:
addr_1117_0:
    push str_28
addr_1117_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1117_2
    jmp addr_54
addr_1117_2:
addr_1118:
    pop rax
addr_1119:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1120:
addr_1121:
addr_1122:
    ; - proc execcmdloud 1 0
addr_1123:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1124
    jmp addr_1073
addr_1124:
    pop rax
    push rax
    push rax
addr_1125:
    mov qword rax, 0
    push rax
addr_1126:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1127:
    pop rbx
    test rbx, rbx
    jz addr_1129
addr_1128:
addr_1128_0:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1128_1:
    mov rax, [args_ptr]
    mov rax, [rax]
    add rax, 2
    shl rax, 3
    mov rbx, [args_ptr]
    add rbx, rax
    push rbx
addr_1128_2:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1128_3:
    pop rax
    push rax
    push rax
addr_1128_4:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1128_5:
    mov qword rax, 59
    push rax
addr_1128_6:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1128_7:
    pop rax
addr_1128_8:
    pop rax
addr_1128_9:
    pop rax
addr_1128_10:
    mov qword rax, -1
    push rax
addr_1128_11:
    mov rax, 60
    pop rdi
    syscall
addr_1128_12:
addr_1129:
    pop rax
    push rax
    push rax
addr_1130:
    mov qword rax, 0
    push rax
addr_1131:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1132:
    pop rbx
    test rbx, rbx
    jz addr_1134
addr_1133:
addr_1133_0:
    mov qword rax, 0
    push rax
addr_1133_1:
    mov qword rax, 0
    push rax
addr_1133_2:
    push mem+245
addr_1133_3:
    mov qword rax, -1
    push rax
addr_1133_4:
    mov qword rax, 61
    push rax
addr_1133_5:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_1133_6:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1133_7
    jmp addr_1079
addr_1133_7:
    pop rax
addr_1133_8:
    pop rax
addr_1133_9:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1133_10:
addr_1134:
    mov qword rax, 0
    push rax
addr_1135:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1136:
    pop rbx
    test rbx, rbx
    jz addr_1138
addr_1137:
addr_1137_0:
    push str_29
addr_1137_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1137_2
    jmp addr_54
addr_1137_2:
addr_1138:
    pop rax
addr_1139:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1140:
addr_1141:
addr_1142:
    ; - proc execcmdecho 1 0
addr_1143:
    mov qword rax, 0
    push rax
addr_1144:
    mov qword rax, 1
    push rax
addr_1145:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1146
    jmp addr_950
addr_1146:
    push str_30
addr_1147:
    push str_31
addr_1148:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1149
    jmp addr_966
addr_1149:
    pop rax
    push rax
    push rax
addr_1150:
addr_1151:
    pop rax
    push rax
    push rax
addr_1152:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1153:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1154
    jmp addr_984
addr_1154:
    mov qword rax, 8
    push rax
addr_1155:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1156:
    pop rax
    push rax
    push rax
addr_1157:
    pop rbx
    test rbx, rbx
    jz addr_1159
addr_1158:
addr_1158_0:
    push str_32
addr_1158_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1158_2
    jmp addr_984
addr_1158_2:
addr_1159:
    pop rax
    push rax
    push rax
addr_1160:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1161:
    mov qword rax, 0
    push rax
addr_1162:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1163:
    pop rbx
    test rbx, rbx
    jz addr_1164
    jmp addr_1150
addr_1164:
    pop rax
addr_1165:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1166
    jmp addr_994
addr_1166:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1167
    jmp addr_1103
addr_1167:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1168:
addr_1169:
addr_1170:
    ; - proc execcmdecholoud 1 0
addr_1171:
    mov qword rax, 0
    push rax
addr_1172:
    mov qword rax, 1
    push rax
addr_1173:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1174
    jmp addr_950
addr_1174:
    push str_33
addr_1175:
    push str_34
addr_1176:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1177
    jmp addr_966
addr_1177:
    pop rax
    push rax
    push rax
addr_1178:
addr_1179:
    pop rax
    push rax
    push rax
addr_1180:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1181:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1182
    jmp addr_984
addr_1182:
    mov qword rax, 8
    push rax
addr_1183:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1184:
    pop rax
    push rax
    push rax
addr_1185:
    pop rbx
    test rbx, rbx
    jz addr_1187
addr_1186:
addr_1186_0:
    push str_35
addr_1186_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1186_2
    jmp addr_984
addr_1186_2:
addr_1187:
    pop rax
    push rax
    push rax
addr_1188:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1189:
    mov qword rax, 0
    push rax
addr_1190:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1191:
    pop rbx
    test rbx, rbx
    jz addr_1192
    jmp addr_1178
addr_1192:
    pop rax
addr_1193:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1194
    jmp addr_994
addr_1194:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1195
    jmp addr_1123
addr_1195:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1196:
addr_1197:
addr_1198:
    ; - proc args 1 1
addr_1199:
    pop rax
    push rax
    push rax
addr_1200:
    mov rax, [args_ptr]
    mov rax, [rax]
    push rax
addr_1201:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1202:
    mov qword rax, 0
    push rax
addr_1203:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1204:
    pop rax
    xor rax, 1
    push rax
addr_1205:
    pop rbx
    test rbx, rbx
    jz addr_1207
addr_1206:
addr_1206_0:
    pop rax
    push rax
    push rax
addr_1206_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1206_2
    jmp addr_461
addr_1206_2:
    push str_36
addr_1206_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1206_4
    jmp addr_461
addr_1206_4:
    pop rax
addr_1206_5:
    mov qword rax, -1
    push rax
addr_1206_6:
    mov rax, 60
    pop rdi
    syscall
addr_1206_7:
addr_1207:
    mov qword rax, 8
    push rax
addr_1208:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1209:
    mov rax, [args_ptr]
    add rax, 8
    push rax
addr_1210:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1211:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1212:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1213:
addr_1214:
addr_1215:
    ; - proc env 1 1
addr_1216:
    push mem+397
addr_1217:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1218:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1219:
    pop rax
addr_1220:
    mov rax, [args_ptr]
    mov rax, [rax]
    add rax, 2
    shl rax, 3
    mov rbx, [args_ptr]
    add rbx, rax
    push rbx
addr_1221:
addr_1222:
    pop rax
    push rax
    push rax
addr_1223:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1224:
    mov qword rax, 61
    push rax
addr_1225:
    push mem+405
addr_1226:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1227
    jmp addr_329
addr_1227:
    push mem+397
addr_1228:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1229:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1230
    jmp addr_60
addr_1230:
    pop rbx
    test rbx, rbx
    jz addr_1232
addr_1231:
addr_1231_0:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1231_1:
    pop rax
addr_1231_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1231_3:
addr_1232:
    pop rax
addr_1233:
    mov qword rax, 8
    push rax
addr_1234:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1235:
    pop rax
    push rax
    push rax
addr_1236:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1237:
    mov qword rax, 0
    push rax
addr_1238:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1239:
    pop rbx
    test rbx, rbx
    jz addr_1240
    jmp addr_1221
addr_1240:
    pop rax
addr_1241:
    mov qword rax, 0
    push rax
addr_1242:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1243:
addr_1244:
addr_1245:
    ; - proc open 4 1
addr_1246:
    mov qword rax, 257
    push rax
addr_1247:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_1248:
    pop rax
    push rax
    push rax
addr_1249:
    mov qword rax, 0
    push rax
addr_1250:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1251:
    pop rbx
    test rbx, rbx
    jz addr_1253
addr_1252:
addr_1252_0:
    push str_37
addr_1252_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1252_2
    jmp addr_54
addr_1252_2:
    pop rax
addr_1252_3:
    mov qword rax, -1
    push rax
addr_1252_4:
    mov rax, 60
    pop rdi
    syscall
addr_1252_5:
addr_1253:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1254:
addr_1255:
addr_1256:
    ; - proc write 3 0
addr_1257:
    mov qword rax, 1
    push rax
addr_1258:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1259:
    mov qword rax, 0
    push rax
addr_1260:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1261:
    pop rbx
    test rbx, rbx
    jz addr_1263
addr_1262:
addr_1262_0:
    push str_38
addr_1262_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1262_2
    jmp addr_54
addr_1262_2:
    mov qword rax, -1
    push rax
addr_1262_3:
    mov rax, 60
    pop rdi
    syscall
addr_1262_4:
addr_1263:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1264:
addr_1265:
addr_1266:
    ; - proc readf 3 1
addr_1267:
    mov qword rax, 0
    push rax
addr_1268:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1269:
    pop rax
    push rax
    push rax
addr_1270:
    mov qword rax, 0
    push rax
addr_1271:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1272:
    pop rbx
    test rbx, rbx
    jz addr_1274
addr_1273:
addr_1273_0:
    push str_39
addr_1273_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1273_2
    jmp addr_54
addr_1273_2:
    pop rax
addr_1273_3:
    mov qword rax, -1
    push rax
addr_1273_4:
    mov rax, 60
    pop rdi
    syscall
addr_1273_5:
addr_1274:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1275:
addr_1276:
addr_1277:
    ; - proc close 1 0
addr_1278:
    mov qword rax, 3
    push rax
addr_1279:
    pop rax
    pop rdi
    syscall
    push rax
addr_1280:
    mov qword rax, 0
    push rax
addr_1281:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1282:
    pop rbx
    test rbx, rbx
    jz addr_1284
addr_1283:
addr_1283_0:
    push str_40
addr_1283_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1283_2
    jmp addr_54
addr_1283_2:
    mov qword rax, -1
    push rax
addr_1283_3:
    mov rax, 60
    pop rdi
    syscall
addr_1283_4:
addr_1284:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1285:
addr_1286:
addr_1287:
addr_1288:
    ; - proc cwd 0 1
addr_1289:
    push mem+469
addr_1290:
    mov qword rax, 255
    push rax
addr_1291:
    mov qword rax, 79
    push rax
addr_1292:
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_1293:
    pop rax
addr_1294:
    push mem+469
addr_1295:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1296:
addr_1297:
addr_1298:
addr_1299:
addr_1300:
addr_1301:
addr_1302:
addr_1303:
addr_1304:
addr_1305:
addr_1306:
addr_1307:
addr_1308:
    ; - proc free 1 0
addr_1309:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1310
    jmp addr_857
addr_1310:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1311:
addr_1312:
addr_1313:
    ; - proc new 1 1
addr_1314:
    push mem+725
addr_1315:
    mov qword rax, 2048
    push rax
addr_1316:
    mov qword rax, 2
    push rax
addr_1317:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1318:
    mov qword rax, 1
    push rax
addr_1319:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1320:
    mov qword rax, 8
    push rax
addr_1321:
    mov qword rax, 2
    push rax
addr_1322:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1323:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1324:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1325
    jmp addr_843
addr_1325:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1326:
    pop rax
addr_1327:
    mov qword rax, 0
    push rax
addr_1328:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1329:
    mov qword rax, 0
    push rax
addr_1330:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1331:
    mov qword rax, 0
    push rax
addr_1332:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1333:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1334:
    mov qword rax, 47
    push rax
addr_1335:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1336:
    pop rbx
    test rbx, rbx
    jz addr_1338
addr_1337:
addr_1337_0:
    pop rax
addr_1337_1:
    mov qword rax, -100
    push rax
addr_1337_2:
addr_1338:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1339
    jmp addr_1246
addr_1339:
    push mem+725
addr_1340:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1341:
    mov qword rax, 1
    push rax
addr_1342:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1343:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1344:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1345:
    pop rax
addr_1346:
    mov qword rax, 2048
    push rax
addr_1347:
    mov qword rax, 2
    push rax
addr_1348:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1349:
    push mem+725
addr_1350:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1351:
    mov qword rax, 17
    push rax
addr_1352:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1353:
    push mem+725
addr_1354:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1355:
    mov qword rax, 1
    push rax
addr_1356:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1357:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1358:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1359
    jmp addr_1267
addr_1359:
    pop rax
addr_1360:
    push mem+725
addr_1361:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1362:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1363:
addr_1364:
addr_1365:
    ; - proc readchar 1 1
addr_1366:
    push mem+725
addr_1367:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1368:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1369:
    pop rax
addr_1370:
    push mem+725
addr_1371:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1372:
    mov qword rax, 9
    push rax
addr_1373:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1374:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1375:
    mov qword rax, 2048
    push rax
addr_1376:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1377:
    pop rbx
    test rbx, rbx
    jz addr_1379
addr_1378:
addr_1378_0:
    push mem+725
addr_1378_1:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_2:
    mov qword rax, 17
    push rax
addr_1378_3:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1378_4:
    push mem+725
addr_1378_5:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_6:
    mov qword rax, 2065
    push rax
addr_1378_7:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1378_8:
    mov qword rax, 2048
    push rax
addr_1378_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1378_10
    jmp addr_565
addr_1378_10:
    push mem+725
addr_1378_11:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_12:
    mov qword rax, 2065
    push rax
addr_1378_13:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1378_14:
    mov qword rax, 2048
    push rax
addr_1378_15:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1378_16
    jmp addr_642
addr_1378_16:
    mov qword rax, 2048
    push rax
addr_1378_17:
    push mem+725
addr_1378_18:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_19:
    mov qword rax, 2065
    push rax
addr_1378_20:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1378_21:
    push mem+725
addr_1378_22:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_23:
    mov qword rax, 1
    push rax
addr_1378_24:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1378_25:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_26:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1378_27
    jmp addr_1267
addr_1378_27:
    pop rax
addr_1378_28:
    push mem+725
addr_1378_29:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_30:
    mov qword rax, 9
    push rax
addr_1378_31:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1378_32:
    pop rax
    push rax
    push rax
addr_1378_33:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1378_34:
    mov qword rax, 2048
    push rax
addr_1378_35:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1378_36:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1378_37:
    pop rax
addr_1378_38:
addr_1379:
    push mem+725
addr_1380:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1381:
    pop rax
    push rax
    push rax
addr_1382:
    mov qword rax, 17
    push rax
addr_1383:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1384:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1385:
    mov qword rax, 9
    push rax
addr_1386:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1387:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1388:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1389:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1390:
    push mem+725
addr_1391:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1392:
    mov qword rax, 9
    push rax
addr_1393:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1394:
    pop rax
    push rax
    push rax
addr_1395:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1396:
    mov qword rax, 1
    push rax
addr_1397:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1398:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1399:
    pop rax
addr_1400:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1401:
addr_1402:
addr_1403:
addr_1404:
    ; - proc version 0 1
addr_1405:
    push str_41
addr_1406:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1407:
addr_1408:
    ; - enum
addr_1409:
addr_1410:
addr_1411:
addr_1412:
addr_1413:
addr_1414:
addr_1415:
addr_1416:
addr_1417:
addr_1418:
addr_1419:
addr_1420:
addr_1421:
addr_1422:
addr_1423:
addr_1424:
    ; - proc inner 1 1
addr_1425:
    mov qword rax, 1
    push rax
addr_1426:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1427:
    pop rax
    push rax
    push rax
addr_1428:
    pop rax
    push rax
    push rax
addr_1429:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1430
    jmp addr_13
addr_1430:
    mov qword rax, 1
    push rax
addr_1431:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1432:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1433:
    mov qword rax, 0
    push rax
addr_1434:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_1435:
    pop rax
addr_1436:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1437:
addr_1438:
addr_1439:
    ; - proc pushstack 1 0
addr_1440:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1441
    jmp addr_1425
addr_1441:
    pop rax
    push rax
    push rax
addr_1442:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1443
    jmp addr_13
addr_1443:
    mov qword rax, 1
    push rax
addr_1444:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1445:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1446
    jmp addr_843
addr_1446:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1447:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1448
    jmp addr_109
addr_1448:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1449
    jmp addr_13
addr_1449:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1450:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1451:
    mov qword rax, 1
    push rax
addr_1452:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1453:
    mov qword rax, 0
    push rax
addr_1454:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_1455:
    pop rax
addr_1456:
    push mem+3182
addr_1457:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1458:
    push mem+3190
addr_1459:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1460:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1461:
    pop rax
    push rax
    push rax
addr_1462:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1463:
    mov qword rax, 0
    push rax
addr_1464:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1465:
    pop rbx
    test rbx, rbx
    jz addr_1467
addr_1466:
addr_1466_0:
    pop rax
    push rax
    push rax
addr_1466_1:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1466_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1466_3
    jmp addr_857
addr_1466_3:
addr_1467:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1468:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1469:
    pop rax
addr_1470:
    push mem+3190
addr_1471:
    pop rax
    push rax
    push rax
addr_1472:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1473:
    mov qword rax, 8
    push rax
addr_1474:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1475:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1476:
    pop rax
addr_1477:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1478:
addr_1479:
addr_1480:
    ; - proc popstack 0 1
addr_1481:
    push mem+3190
addr_1482:
    pop rax
    push rax
    push rax
addr_1483:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1484:
    mov qword rax, 8
    push rax
addr_1485:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1486:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1487:
    pop rax
addr_1488:
    push mem+3182
addr_1489:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1490:
    push mem+3190
addr_1491:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1492:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1493:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1494:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1495:
addr_1496:
addr_1497:
    ; - proc help 1 0
addr_1498:
    pop rax
    push rax
    push rax
addr_1499:
    mov qword rax, 0
    push rax
addr_1500:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1501:
    pop rbx
    test rbx, rbx
    jz addr_1503
addr_1502:
addr_1502_0:
    push str_42
addr_1502_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1502_2
    jmp addr_34
addr_1502_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1502_3
    jmp addr_1405
addr_1502_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1502_4
    jmp addr_54
addr_1502_4:
    pop rax
addr_1502_5:
    mov qword rax, 0
    push rax
addr_1502_6:
    mov rax, 60
    pop rdi
    syscall
addr_1502_7:
addr_1503:
    pop rax
    push rax
    push rax
addr_1504:
    mov qword rax, 1
    push rax
addr_1505:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1506:
    pop rbx
    test rbx, rbx
    jz addr_1508
addr_1507:
addr_1507_0:
    push str_43
addr_1507_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1507_2
    jmp addr_54
addr_1507_2:
addr_1508:
    pop rax
    push rax
    push rax
addr_1509:
    mov qword rax, 2
    push rax
addr_1510:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1511:
    pop rbx
    test rbx, rbx
    jz addr_1513
addr_1512:
addr_1512_0:
    push str_44
addr_1512_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1512_2
    jmp addr_34
addr_1512_2:
    mov qword rax, 1
    push rax
addr_1512_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1512_4
    jmp addr_1199
addr_1512_4:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1512_5
    jmp addr_34
addr_1512_5:
    push str_45
addr_1512_6:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1512_7
    jmp addr_54
addr_1512_7:
addr_1513:
    pop rax
    push rax
    push rax
addr_1514:
    mov qword rax, 3
    push rax
addr_1515:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1516:
    pop rbx
    test rbx, rbx
    jz addr_1518
addr_1517:
addr_1517_0:
    push str_46
addr_1517_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1517_2
    jmp addr_54
addr_1517_2:
addr_1518:
    pop rax
addr_1519:
    push str_47
addr_1520:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1521
    jmp addr_34
addr_1521:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1522
    jmp addr_1405
addr_1522:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1523
    jmp addr_34
addr_1523:
    push str_48
addr_1524:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1525
    jmp addr_54
addr_1525:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1526
    jmp addr_45
addr_1526:
    push str_49
addr_1527:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1528
    jmp addr_54
addr_1528:
    push str_50
addr_1529:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1530
    jmp addr_54
addr_1530:
    push str_51
addr_1531:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1532
    jmp addr_54
addr_1532:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1533
    jmp addr_45
addr_1533:
    mov qword rax, 1
    push rax
addr_1534:
    mov rax, 60
    pop rdi
    syscall
addr_1535:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1536:
addr_1537:
addr_1538:
    ; - proc openinput 1 0
addr_1539:
    mov qword rax, 0
    push rax
addr_1540:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1541:
    mov qword rax, 0
    push rax
addr_1542:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1543:
    mov qword rax, 0
    push rax
addr_1544:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1545:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1546:
    mov qword rax, 47
    push rax
addr_1547:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1548:
    pop rbx
    test rbx, rbx
    jz addr_1550
addr_1549:
addr_1549_0:
    pop rax
addr_1549_1:
    mov qword rax, -100
    push rax
addr_1549_2:
addr_1550:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1551
    jmp addr_1246
addr_1551:
    push mem+2141
addr_1552:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1553:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1554:
    pop rax
addr_1555:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1556:
addr_1557:
addr_1558:
    ; - proc clonerepo 0 0
addr_1559:
    push mem+797
addr_1560:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1561
    jmp addr_156
addr_1561:
    push str_52
addr_1562:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1563
    jmp addr_109
addr_1563:
    pop rax
addr_1564:
    mov qword rax, 2
    push rax
addr_1565:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1566
    jmp addr_1199
addr_1566:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1567
    jmp addr_178
addr_1567:
    pop rax
addr_1568:
    push mem+861
addr_1569:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1570
    jmp addr_156
addr_1570:
    push mem+1117
addr_1571:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1572
    jmp addr_109
addr_1572:
    pop rax
addr_1573:
    mov qword rax, 2
    push rax
addr_1574:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1575
    jmp addr_1199
addr_1575:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1576
    jmp addr_178
addr_1576:
    pop rax
addr_1577:
    push mem+733
addr_1578:
    push str_53
addr_1579:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1580:
    mov qword rax, 8
    push rax
addr_1581:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1582:
    push str_54
addr_1583:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1584:
    mov qword rax, 8
    push rax
addr_1585:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1586:
    push mem+797
addr_1587:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1588:
    mov qword rax, 8
    push rax
addr_1589:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1590:
    push mem+861
addr_1591:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1592:
    mov qword rax, 8
    push rax
addr_1593:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1594:
    mov qword rax, 0
    push rax
addr_1595:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1596:
    pop rax
addr_1597:
    push mem+733
addr_1598:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1599
    jmp addr_1143
addr_1599:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1600:
addr_1601:
addr_1602:
    ; - proc pullrepo 0 0
addr_1603:
    push mem+733
addr_1604:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1605
    jmp addr_1143
addr_1605:
    push mem+861
addr_1606:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1607
    jmp addr_156
addr_1607:
    push mem+1117
addr_1608:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1609
    jmp addr_109
addr_1609:
    pop rax
addr_1610:
    mov qword rax, 2
    push rax
addr_1611:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1612
    jmp addr_1199
addr_1612:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1613
    jmp addr_178
addr_1613:
    pop rax
addr_1614:
    push mem+733
addr_1615:
    push str_55
addr_1616:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1617:
    mov qword rax, 8
    push rax
addr_1618:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1619:
    push str_56
addr_1620:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1621:
    mov qword rax, 8
    push rax
addr_1622:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1623:
    push mem+861
addr_1624:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1625:
    mov qword rax, 8
    push rax
addr_1626:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1627:
    push str_57
addr_1628:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1629:
    mov qword rax, 8
    push rax
addr_1630:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1631:
    push str_58
addr_1632:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1633:
    mov qword rax, 8
    push rax
addr_1634:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1635:
    push str_59
addr_1636:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1637:
    mov qword rax, 8
    push rax
addr_1638:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1639:
    mov qword rax, 0
    push rax
addr_1640:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1641:
    pop rax
addr_1642:
    push mem+733
addr_1643:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1644
    jmp addr_1143
addr_1644:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1645:
addr_1646:
addr_1647:
    ; - proc setsrc 0 0
addr_1648:
    push mem+1373
addr_1649:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1650
    jmp addr_156
addr_1650:
    push mem+1117
addr_1651:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1652
    jmp addr_109
addr_1652:
    pop rax
addr_1653:
    push str_60
addr_1654:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1655
    jmp addr_178
addr_1655:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1656
    jmp addr_1481
addr_1656:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1657
    jmp addr_178
addr_1657:
    push str_61
addr_1658:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1659
    jmp addr_178
addr_1659:
    pop rax
addr_1660:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1661:
addr_1662:
addr_1663:
    ; - proc addreq 0 0
addr_1664:
    push mem+861
addr_1665:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1666
    jmp addr_156
addr_1666:
    push str_62
addr_1667:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1668
    jmp addr_1216
addr_1668:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1669
    jmp addr_109
addr_1669:
    pop rax
addr_1670:
    push str_63
addr_1671:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1672
    jmp addr_178
addr_1672:
    pop rax
addr_1673:
    push mem+733
addr_1674:
    push mem+861
addr_1675:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1676:
    mov qword rax, 8
    push rax
addr_1677:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1678:
    push str_64
addr_1679:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1680:
    mov qword rax, 8
    push rax
addr_1681:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1682:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1683
    jmp addr_1481
addr_1683:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1684:
    mov qword rax, 8
    push rax
addr_1685:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1686:
    mov qword rax, 0
    push rax
addr_1687:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1688:
    pop rax
addr_1689:
    push mem+733
addr_1690:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1691
    jmp addr_1171
addr_1691:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1692:
addr_1693:
addr_1694:
    ; - proc addbin 0 0
addr_1695:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1696
    jmp addr_1481
addr_1696:
    push mem+861
addr_1697:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1698
    jmp addr_156
addr_1698:
    push mem+1373
addr_1699:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1700
    jmp addr_109
addr_1700:
    pop rax
addr_1701:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1702:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1703
    jmp addr_178
addr_1703:
    push str_65
addr_1704:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1705
    jmp addr_178
addr_1705:
    pop rax
addr_1706:
    push mem+1629
addr_1707:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1708
    jmp addr_156
addr_1708:
    push mem+1885
addr_1709:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1710
    jmp addr_109
addr_1710:
    pop rax
addr_1711:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1712:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1713
    jmp addr_178
addr_1713:
    pop rax
addr_1714:
    push mem+733
addr_1715:
    push str_66
addr_1716:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1717:
    mov qword rax, 8
    push rax
addr_1718:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1719:
    push str_67
addr_1720:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1721:
    mov qword rax, 8
    push rax
addr_1722:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1723:
    push mem+1629
addr_1724:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1725:
    mov qword rax, 8
    push rax
addr_1726:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1727:
    push mem+861
addr_1728:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1729:
    mov qword rax, 8
    push rax
addr_1730:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1731:
    mov qword rax, 0
    push rax
addr_1732:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1733:
    pop rax
addr_1734:
    push mem+733
addr_1735:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1736
    jmp addr_1143
addr_1736:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1737:
addr_1738:
addr_1739:
    ; - proc addlibd 0 0
addr_1740:
    push mem+1629
addr_1741:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1742
    jmp addr_156
addr_1742:
    push mem+1373
addr_1743:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1744
    jmp addr_109
addr_1744:
    pop rax
addr_1745:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1746
    jmp addr_1481
addr_1746:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1747
    jmp addr_178
addr_1747:
    pop rax
addr_1748:
    push mem+861
addr_1749:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1750
    jmp addr_156
addr_1750:
    push str_68
addr_1751:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1752
    jmp addr_1216
addr_1752:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1753
    jmp addr_109
addr_1753:
    pop rax
addr_1754:
    push str_69
addr_1755:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1756
    jmp addr_178
addr_1756:
    pop rax
addr_1757:
    push mem+733
addr_1758:
    push str_70
addr_1759:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1760:
    mov qword rax, 8
    push rax
addr_1761:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1762:
    push str_71
addr_1763:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1764:
    mov qword rax, 8
    push rax
addr_1765:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1766:
    push mem+1629
addr_1767:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1768:
    mov qword rax, 8
    push rax
addr_1769:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1770:
    push mem+861
addr_1771:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1772:
    mov qword rax, 8
    push rax
addr_1773:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1774:
    mov qword rax, 0
    push rax
addr_1775:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1776:
    pop rax
addr_1777:
    push mem+733
addr_1778:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1779
    jmp addr_1143
addr_1779:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1780:
addr_1781:
addr_1782:
    ; - proc addlib 0 0
addr_1783:
    push mem+1629
addr_1784:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1785
    jmp addr_156
addr_1785:
    push mem+1373
addr_1786:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1787
    jmp addr_109
addr_1787:
    pop rax
addr_1788:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1789
    jmp addr_1481
addr_1789:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1790
    jmp addr_178
addr_1790:
    pop rax
addr_1791:
    push mem+861
addr_1792:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1793
    jmp addr_156
addr_1793:
    push str_72
addr_1794:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1795
    jmp addr_1216
addr_1795:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1796
    jmp addr_109
addr_1796:
    pop rax
addr_1797:
    push str_73
addr_1798:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1799
    jmp addr_178
addr_1799:
    pop rax
addr_1800:
    push mem+733
addr_1801:
    push str_74
addr_1802:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1803:
    mov qword rax, 8
    push rax
addr_1804:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1805:
    push mem+1629
addr_1806:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1807:
    mov qword rax, 8
    push rax
addr_1808:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1809:
    push mem+861
addr_1810:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1811:
    mov qword rax, 8
    push rax
addr_1812:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1813:
    mov qword rax, 0
    push rax
addr_1814:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1815:
    mov qword rax, 8
    push rax
addr_1816:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1817:
    pop rax
addr_1818:
    push mem+733
addr_1819:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1820
    jmp addr_1143
addr_1820:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1821:
addr_1822:
addr_1823:
    ; - proc parsecmd 0 0
addr_1824:
    push mem+2157
addr_1825:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1826:
    mov qword rax, 34
    push rax
addr_1827:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1828:
    push mem+2157
addr_1829:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1830
    jmp addr_139
addr_1830:
    mov qword rax, 34
    push rax
addr_1831:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1832:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_1833:
    pop rbx
    test rbx, rbx
    jz addr_1835
addr_1834:
addr_1834_0:
    push mem+2157
addr_1834_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1834_2
    jmp addr_1440
addr_1834_2:
    push mem+2157
addr_1834_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1834_4
    jmp addr_156
addr_1834_4:
    pop rax
addr_1834_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1834_6:
addr_1835:
    push mem+2157
addr_1836:
    pop rax
    push rax
    push rax
addr_1837:
    push str_75
addr_1838:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1839
    jmp addr_60
addr_1839:
    pop rbx
    test rbx, rbx
    jz addr_1841
addr_1840:
addr_1840_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1840_1
    jmp addr_1648
addr_1840_1:
    pop rax
addr_1840_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1840_3:
addr_1841:
    pop rax
    push rax
    push rax
addr_1842:
    push str_76
addr_1843:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1844
    jmp addr_60
addr_1844:
    pop rbx
    test rbx, rbx
    jz addr_1846
addr_1845:
addr_1845_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1845_1
    jmp addr_1664
addr_1845_1:
    pop rax
addr_1845_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1845_3:
addr_1846:
    pop rax
    push rax
    push rax
addr_1847:
    push str_77
addr_1848:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1849
    jmp addr_60
addr_1849:
    pop rbx
    test rbx, rbx
    jz addr_1851
addr_1850:
addr_1850_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1850_1
    jmp addr_1695
addr_1850_1:
    pop rax
addr_1850_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1850_3:
addr_1851:
    pop rax
    push rax
    push rax
addr_1852:
    push str_78
addr_1853:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1854
    jmp addr_60
addr_1854:
    pop rbx
    test rbx, rbx
    jz addr_1856
addr_1855:
addr_1855_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1855_1
    jmp addr_1783
addr_1855_1:
    pop rax
addr_1855_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1855_3:
addr_1856:
    pop rax
    push rax
    push rax
addr_1857:
    push str_79
addr_1858:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1859
    jmp addr_60
addr_1859:
    pop rbx
    test rbx, rbx
    jz addr_1861
addr_1860:
addr_1860_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1860_1
    jmp addr_1740
addr_1860_1:
    pop rax
addr_1860_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1860_3:
addr_1861:
    pop rax
addr_1862:
    mov qword rax, 2
    push rax
addr_1863:
    mov qword rax, 0
    push rax
addr_1864:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1865
    jmp addr_950
addr_1865:
    push str_80
addr_1866:
    push str_81
addr_1867:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1868
    jmp addr_966
addr_1868:
    push mem+2157
addr_1869:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1870
    jmp addr_984
addr_1870:
    push str_82
addr_1871:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1872
    jmp addr_984
addr_1872:
    mov qword rax, 255
    push rax
addr_1873:
    mov rax, 60
    pop rdi
    syscall
addr_1874:
addr_1875:
addr_1876:
    ; - proc checkcmd 0 1
addr_1877:
    push mem+2157
addr_1878:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1879:
    mov qword rax, 34
    push rax
addr_1880:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1881:
    push mem+2157
addr_1882:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1883
    jmp addr_139
addr_1883:
    mov qword rax, 34
    push rax
addr_1884:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1885:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_1886:
    push mem+2157
addr_1887:
    push str_83
addr_1888:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1889
    jmp addr_60
addr_1889:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_1890:
    pop rax
    xor rax, 1
    push rax
addr_1891:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1892:
addr_1893:
addr_1894:
    ; - proc checkbuffer 2 2
addr_1895:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1896
    jmp addr_1877
addr_1896:
    pop rbx
    test rbx, rbx
    jz addr_1898
addr_1897:
addr_1897_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1897_1
    jmp addr_1824
addr_1897_1:
    pop rax
addr_1897_2:
    pop rax
addr_1897_3:
    push mem+2157
addr_1897_4:
    mov qword rax, 0
    push rax
addr_1897_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1897_6:
addr_1898:
    pop rax
addr_1899:
    mov qword rax, 32
    push rax
addr_1900:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1901:
addr_1902:
addr_1903:
    ; - proc parsefile 0 0
addr_1904:
    push mem+3182
addr_1905:
    mov qword rax, 1024
    push rax
addr_1906:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1907
    jmp addr_843
addr_1907:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1908:
    pop rax
addr_1909:
    push mem+2141
addr_1910:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1911:
    mov qword rax, 0
    push rax
addr_1912:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1913:
    pop rbx
    test rbx, rbx
    jz addr_1915
addr_1914:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1915:
    mov qword rax, 1024
    push rax
addr_1916:
    mov qword rax, 1024
    push rax
addr_1917:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1918
    jmp addr_843
addr_1918:
    push mem+2149
addr_1919:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1920:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1921:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1922:
    push mem+2141
addr_1923:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1924:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1925
    jmp addr_1267
addr_1925:
    pop rax
addr_1926:
    push mem+2141
addr_1927:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1928:
    mov qword rax, 74
    push rax
addr_1929:
    pop rax
    pop rdi
    syscall
    push rax
addr_1930:
    pop rax
addr_1931:
addr_1932:
    push mem+2149
addr_1933:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1934:
    pop rax
    push rax
    push rax
addr_1935:
    push mem+2157
addr_1936:
addr_1937:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1938:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1939:
    pop rax
    push rax
    push rax
addr_1940:
    mov qword rax, 9
    push rax
addr_1941:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1942:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1943:
    mov qword rax, 10
    push rax
addr_1944:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1945:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_1946:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1947:
    mov qword rax, 13
    push rax
addr_1948:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1949:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_1950:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1951:
    mov qword rax, 32
    push rax
addr_1952:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1953:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_1954:
    pop rbx
    test rbx, rbx
    jz addr_1956
addr_1955:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1956
    jmp addr_1895
addr_1956:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1957:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1958:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_1959:
    pop rax
addr_1960:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1961:
    mov qword rax, 1
    push rax
addr_1962:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1963:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1964:
    pop rax
    push rax
    push rax
addr_1965:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1966:
    mov qword rax, 0
    push rax
addr_1967:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1968:
    pop rbx
    test rbx, rbx
    jz addr_1970
addr_1969:
addr_1969_0:
    mov qword rax, 1
    push rax
addr_1969_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1969_2:
addr_1970:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1971:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1972:
    mov qword rax, 0
    push rax
addr_1973:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1974:
    pop rbx
    test rbx, rbx
    jz addr_1975
    jmp addr_1936
addr_1975:
    pop rax
addr_1976:
    pop rax
addr_1977:
    push mem+2149
addr_1978:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1979:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1980:
    pop rax
addr_1981:
    push mem+2149
addr_1982:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1983:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1984
    jmp addr_156
addr_1984:
    push mem+2157
addr_1985:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1986
    jmp addr_109
addr_1986:
    pop rax
addr_1987:
    pop rax
addr_1988:
    mov qword rax, 1024
    push rax
addr_1989:
    push mem+2157
addr_1990:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1991
    jmp addr_13
addr_1991:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1992:
    push mem+2149
addr_1993:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1994:
    push mem+2157
addr_1995:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1996
    jmp addr_13
addr_1996:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1997:
    push mem+2141
addr_1998:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1999:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2000
    jmp addr_1267
addr_2000:
    pop rax
    push rax
    push rax
addr_2001:
    push mem+2149
addr_2002:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2003:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2004:
    push mem+2157
addr_2005:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2006
    jmp addr_13
addr_2006:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2007:
    mov qword rax, 1
    push rax
addr_2008:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2009:
    pop rax
    push rax
    push rax
addr_2010:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_2011:
    mov qword rax, 0
    push rax
addr_2012:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2013:
    pop rbx
    test rbx, rbx
    jz addr_2015
addr_2014:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2015
    jmp addr_156
addr_2015:
    pop rax
addr_2016:
    push mem+2157
addr_2017:
    mov qword rax, 1024
    push rax
addr_2018:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2019
    jmp addr_642
addr_2019:
    pop rbx
    test rbx, rbx
    jz addr_2020
    jmp addr_1931
addr_2020:
    push mem+2149
addr_2021:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2022:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2023
    jmp addr_857
addr_2023:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2024:
addr_2025:
addr_2026:
    ; - proc init 0 0
addr_2027:
    push mem+1117
addr_2028:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2029
    jmp addr_156
addr_2029:
    push str_84
addr_2030:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2031
    jmp addr_1216
addr_2031:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2032
    jmp addr_109
addr_2032:
    pop rax
addr_2033:
    push str_85
addr_2034:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2035
    jmp addr_178
addr_2035:
    pop rax
addr_2036:
    push mem+1629
addr_2037:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2038
    jmp addr_156
addr_2038:
    push str_86
addr_2039:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2040
    jmp addr_1216
addr_2040:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2041
    jmp addr_109
addr_2041:
    pop rax
addr_2042:
    push str_87
addr_2043:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2044
    jmp addr_178
addr_2044:
    pop rax
addr_2045:
    push mem+1885
addr_2046:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2047
    jmp addr_156
addr_2047:
    push str_88
addr_2048:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2049
    jmp addr_1216
addr_2049:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2050
    jmp addr_109
addr_2050:
    pop rax
addr_2051:
    push str_89
addr_2052:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2053
    jmp addr_178
addr_2053:
    pop rax
addr_2054:
    push mem+733
addr_2055:
    push str_90
addr_2056:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2057:
    mov qword rax, 8
    push rax
addr_2058:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2059:
    push str_91
addr_2060:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2061:
    mov qword rax, 8
    push rax
addr_2062:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2063:
    push mem+1117
addr_2064:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2065:
    mov qword rax, 8
    push rax
addr_2066:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2067:
    push mem+1885
addr_2068:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2069:
    mov qword rax, 8
    push rax
addr_2070:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2071:
    push mem+1629
addr_2072:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2073:
    mov qword rax, 8
    push rax
addr_2074:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2075:
    mov qword rax, 0
    push rax
addr_2076:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2077:
    pop rax
addr_2078:
    push mem+733
addr_2079:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2080
    jmp addr_1143
addr_2080:
    push mem+1117
addr_2081:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2082
    jmp addr_156
addr_2082:
    push str_92
addr_2083:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2084
    jmp addr_1216
addr_2084:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2085
    jmp addr_109
addr_2085:
    pop rax
addr_2086:
    push str_93
addr_2087:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2088
    jmp addr_178
addr_2088:
    pop rax
addr_2089:
    push mem+861
addr_2090:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2091
    jmp addr_156
addr_2091:
    push mem+1117
addr_2092:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2093
    jmp addr_109
addr_2093:
    pop rax
addr_2094:
    push str_94
addr_2095:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2096
    jmp addr_178
addr_2096:
    pop rax
addr_2097:
    push mem+733
addr_2098:
    push str_95
addr_2099:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2100:
    mov qword rax, 8
    push rax
addr_2101:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2102:
    push str_96
addr_2103:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2104:
    mov qword rax, 8
    push rax
addr_2105:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2106:
    push str_97
addr_2107:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2108:
    mov qword rax, 8
    push rax
addr_2109:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2110:
    push mem+861
addr_2111:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2112:
    mov qword rax, 8
    push rax
addr_2113:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2114:
    mov qword rax, 0
    push rax
addr_2115:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2116:
    pop rax
addr_2117:
    push mem+733
addr_2118:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2119
    jmp addr_1143
addr_2119:
    push mem+733
addr_2120:
    mov qword rax, 0
    push rax
addr_2121:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2122
    jmp addr_1199
addr_2122:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2123:
    mov qword rax, 8
    push rax
addr_2124:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2125:
    push str_98
addr_2126:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2127:
    mov qword rax, 8
    push rax
addr_2128:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2129:
    push str_99
addr_2130:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2131:
    mov qword rax, 8
    push rax
addr_2132:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2133:
    mov qword rax, 0
    push rax
addr_2134:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2135:
    pop rax
addr_2136:
    push mem+733
addr_2137:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2138
    jmp addr_1171
addr_2138:
    push mem+733
addr_2139:
    mov qword rax, 0
    push rax
addr_2140:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2141
    jmp addr_1199
addr_2141:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2142:
    mov qword rax, 8
    push rax
addr_2143:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2144:
    push str_100
addr_2145:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2146:
    mov qword rax, 8
    push rax
addr_2147:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2148:
    push str_101
addr_2149:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2150:
    mov qword rax, 8
    push rax
addr_2151:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2152:
    mov qword rax, 0
    push rax
addr_2153:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2154:
    pop rax
addr_2155:
    push mem+733
addr_2156:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2157
    jmp addr_1171
addr_2157:
    push mem+861
addr_2158:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2159
    jmp addr_156
addr_2159:
    push str_102
addr_2160:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2161
    jmp addr_1216
addr_2161:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2162
    jmp addr_109
addr_2162:
    pop rax
addr_2163:
    push str_103
addr_2164:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2165
    jmp addr_178
addr_2165:
    pop rax
addr_2166:
    push mem+1885
addr_2167:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2168
    jmp addr_156
addr_2168:
    push str_104
addr_2169:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2170
    jmp addr_1216
addr_2170:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2171
    jmp addr_109
addr_2171:
    pop rax
addr_2172:
    push str_105
addr_2173:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2174
    jmp addr_178
addr_2174:
    pop rax
addr_2175:
    push mem+1373
addr_2176:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2177
    jmp addr_156
addr_2177:
    push str_106
addr_2178:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2179
    jmp addr_1216
addr_2179:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2180
    jmp addr_109
addr_2180:
    pop rax
addr_2181:
    push str_107
addr_2182:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2183
    jmp addr_178
addr_2183:
    pop rax
addr_2184:
    push mem+733
addr_2185:
    push mem+861
addr_2186:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2187:
    mov qword rax, 8
    push rax
addr_2188:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2189:
    push str_108
addr_2190:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2191:
    mov qword rax, 8
    push rax
addr_2192:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2193:
    push mem+1629
addr_2194:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2195:
    mov qword rax, 8
    push rax
addr_2196:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2197:
    push str_109
addr_2198:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2199:
    mov qword rax, 8
    push rax
addr_2200:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2201:
    push mem+1885
addr_2202:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2203:
    mov qword rax, 8
    push rax
addr_2204:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2205:
    push mem+1373
addr_2206:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2207:
    mov qword rax, 8
    push rax
addr_2208:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2209:
    mov qword rax, 0
    push rax
addr_2210:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2211:
    pop rax
addr_2212:
    push mem+733
addr_2213:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2214
    jmp addr_1171
addr_2214:
    push mem+1373
addr_2215:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2216
    jmp addr_156
addr_2216:
    push str_110
addr_2217:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2218
    jmp addr_1216
addr_2218:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2219
    jmp addr_109
addr_2219:
    pop rax
addr_2220:
    push str_111
addr_2221:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2222
    jmp addr_178
addr_2222:
    pop rax
addr_2223:
    push mem+733
addr_2224:
    push str_112
addr_2225:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2226:
    mov qword rax, 8
    push rax
addr_2227:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2228:
    push str_113
addr_2229:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2230:
    mov qword rax, 8
    push rax
addr_2231:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2232:
    push mem+1373
addr_2233:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2234:
    mov qword rax, 8
    push rax
addr_2235:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2236:
    mov qword rax, 0
    push rax
addr_2237:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2238:
    pop rax
addr_2239:
    push mem+733
addr_2240:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2241
    jmp addr_1171
addr_2241:
    push mem+733
addr_2242:
    mov qword rax, 0
    push rax
addr_2243:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2244
    jmp addr_1199
addr_2244:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2245:
    mov qword rax, 8
    push rax
addr_2246:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2247:
    push str_114
addr_2248:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2249:
    mov qword rax, 8
    push rax
addr_2250:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2251:
    push str_115
addr_2252:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2253:
    mov qword rax, 8
    push rax
addr_2254:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2255:
    mov qword rax, 0
    push rax
addr_2256:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2257:
    pop rax
addr_2258:
    push mem+733
addr_2259:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2260
    jmp addr_1171
addr_2260:
    push mem+733
addr_2261:
    mov qword rax, 0
    push rax
addr_2262:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2263
    jmp addr_1199
addr_2263:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2264:
    mov qword rax, 8
    push rax
addr_2265:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2266:
    push str_116
addr_2267:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2268:
    mov qword rax, 8
    push rax
addr_2269:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2270:
    push str_117
addr_2271:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2272:
    mov qword rax, 8
    push rax
addr_2273:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2274:
    mov qword rax, 0
    push rax
addr_2275:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2276:
    pop rax
addr_2277:
    push mem+733
addr_2278:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2279
    jmp addr_1171
addr_2279:
    mov qword rax, 0
    push rax
addr_2280:
    mov rax, 60
    pop rdi
    syscall
addr_2281:
addr_2282:
addr_2283:
    ; - proc install 0 0
addr_2284:
    mov qword rax, 2
    push rax
addr_2285:
    mov rax, [args_ptr]
    mov rax, [rax]
    push rax
addr_2286:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2287:
    pop rbx
    test rbx, rbx
    jz addr_2289
addr_2288:
addr_2288_0:
    mov qword rax, 3
    push rax
addr_2288_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2288_2
    jmp addr_1498
addr_2288_2:
addr_2289:
    push mem+1117
addr_2290:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2291
    jmp addr_156
addr_2291:
    push str_118
addr_2292:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2293
    jmp addr_1216
addr_2293:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2294
    jmp addr_109
addr_2294:
    pop rax
addr_2295:
    push str_119
addr_2296:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2297
    jmp addr_178
addr_2297:
    pop rax
addr_2298:
    push mem+1629
addr_2299:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2300
    jmp addr_156
addr_2300:
    push str_120
addr_2301:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2302
    jmp addr_1216
addr_2302:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2303
    jmp addr_109
addr_2303:
    pop rax
addr_2304:
    push str_121
addr_2305:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2306
    jmp addr_178
addr_2306:
    pop rax
addr_2307:
    push mem+1885
addr_2308:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2309
    jmp addr_156
addr_2309:
    push str_122
addr_2310:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2311
    jmp addr_1216
addr_2311:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2312
    jmp addr_109
addr_2312:
    pop rax
addr_2313:
    push str_123
addr_2314:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2315
    jmp addr_178
addr_2315:
    pop rax
addr_2316:
    push mem+733
addr_2317:
    push str_124
addr_2318:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2319:
    mov qword rax, 8
    push rax
addr_2320:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2321:
    push str_125
addr_2322:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2323:
    mov qword rax, 8
    push rax
addr_2324:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2325:
    push mem+1117
addr_2326:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2327:
    mov qword rax, 8
    push rax
addr_2328:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2329:
    push mem+1885
addr_2330:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2331:
    mov qword rax, 8
    push rax
addr_2332:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2333:
    push mem+1629
addr_2334:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2335:
    mov qword rax, 8
    push rax
addr_2336:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2337:
    mov qword rax, 0
    push rax
addr_2338:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2339:
    pop rax
addr_2340:
    push mem+861
addr_2341:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2342
    jmp addr_156
addr_2342:
    push mem+1117
addr_2343:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2344
    jmp addr_109
addr_2344:
    pop rax
addr_2345:
    mov qword rax, 2
    push rax
addr_2346:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2347
    jmp addr_1199
addr_2347:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2348
    jmp addr_178
addr_2348:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2349
    jmp addr_1092
addr_2349:
    pop rax
    push rax
    push rax
addr_2350:
    pop rbx
    test rbx, rbx
    jz addr_2352
addr_2351:
addr_2351_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2351_1
    jmp addr_1603
addr_2351_1:
addr_2352:
    pop rax
    xor rax, 1
    push rax
addr_2353:
    pop rbx
    test rbx, rbx
    jz addr_2355
addr_2354:
addr_2354_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2354_1
    jmp addr_1559
addr_2354_1:
addr_2355:
    push mem+861
addr_2356:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2357
    jmp addr_156
addr_2357:
    push mem+1117
addr_2358:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2359
    jmp addr_109
addr_2359:
    pop rax
addr_2360:
    mov qword rax, 2
    push rax
addr_2361:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2362
    jmp addr_1199
addr_2362:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2363
    jmp addr_178
addr_2363:
    push str_126
addr_2364:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2365
    jmp addr_178
addr_2365:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2366
    jmp addr_1092
addr_2366:
    pop rax
    xor rax, 1
    push rax
addr_2367:
    pop rbx
    test rbx, rbx
    jz addr_2369
addr_2368:
addr_2368_0:
    push str_127
addr_2368_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2368_2
    jmp addr_54
addr_2368_2:
    push mem+861
addr_2368_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2368_4
    jmp addr_54
addr_2368_4:
    mov qword rax, 255
    push rax
addr_2368_5:
    mov rax, 60
    pop rdi
    syscall
addr_2368_6:
addr_2369:
    push mem+861
addr_2370:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2371
    jmp addr_1539
addr_2371:
    mov qword rax, 3
    push rax
addr_2372:
    mov qword rax, 0
    push rax
addr_2373:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2374
    jmp addr_950
addr_2374:
    push str_128
addr_2375:
    push str_129
addr_2376:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2377
    jmp addr_966
addr_2377:
    push mem+861
addr_2378:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2379
    jmp addr_984
addr_2379:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2380
    jmp addr_994
addr_2380:
    push mem+861
addr_2381:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2382
    jmp addr_156
addr_2382:
    push mem+1117
addr_2383:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2384
    jmp addr_109
addr_2384:
    mov qword rax, 2
    push rax
addr_2385:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2386
    jmp addr_1199
addr_2386:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2387
    jmp addr_178
addr_2387:
    pop rax
addr_2388:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2389
    jmp addr_1904
addr_2389:
    mov qword rax, 0
    push rax
addr_2390:
    mov rax, 60
    pop rdi
    syscall
addr_2391:
addr_2392:
addr_2393:
    ; - proc remove 0 0
addr_2394:
    mov qword rax, 2
    push rax
addr_2395:
    mov rax, [args_ptr]
    mov rax, [rax]
    push rax
addr_2396:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2397:
    pop rbx
    test rbx, rbx
    jz addr_2399
addr_2398:
addr_2398_0:
    mov qword rax, 3
    push rax
addr_2398_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2398_2
    jmp addr_1498
addr_2398_2:
addr_2399:
    mov qword rax, 0
    push rax
addr_2400:
    mov rax, 60
    pop rdi
    syscall
addr_2401:
addr_2402:
addr_2403:
    ; - proc develop 0 0
addr_2404:
    mov qword rax, 2
    push rax
addr_2405:
    mov rax, [args_ptr]
    mov rax, [rax]
    push rax
addr_2406:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2407:
    pop rbx
    test rbx, rbx
    jz addr_2409
addr_2408:
addr_2408_0:
    mov qword rax, 3
    push rax
addr_2408_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2408_2
    jmp addr_1498
addr_2408_2:
addr_2409:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2410
    jmp addr_1289
addr_2410:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2411
    jmp addr_54
addr_2411:
    mov qword rax, 0
    push rax
addr_2412:
    mov rax, 60
    pop rdi
    syscall
addr_2413:
addr_2414:
addr_2415:
    ; - proc main 0 0
addr_2416:
    mov qword rax, 1
    push rax
addr_2417:
    mov rax, [args_ptr]
    mov rax, [rax]
    push rax
addr_2418:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2419:
    pop rbx
    test rbx, rbx
    jz addr_2421
addr_2420:
addr_2420_0:
    mov qword rax, 1
    push rax
addr_2420_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2420_2
    jmp addr_1498
addr_2420_2:
addr_2421:
    mov qword rax, 1
    push rax
addr_2422:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2423
    jmp addr_1199
addr_2423:
    pop rax
    push rax
    push rax
addr_2424:
    push str_130
addr_2425:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2426
    jmp addr_60
addr_2426:
    pop rbx
    test rbx, rbx
    jz addr_2428
addr_2427:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2428
    jmp addr_2027
addr_2428:
    pop rax
    push rax
    push rax
addr_2429:
    push str_131
addr_2430:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2431
    jmp addr_60
addr_2431:
    pop rbx
    test rbx, rbx
    jz addr_2433
addr_2432:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2433
    jmp addr_2284
addr_2433:
    pop rax
    push rax
    push rax
addr_2434:
    push str_132
addr_2435:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2436
    jmp addr_60
addr_2436:
    pop rbx
    test rbx, rbx
    jz addr_2438
addr_2437:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2438
    jmp addr_2394
addr_2438:
    pop rax
    push rax
    push rax
addr_2439:
    push str_133
addr_2440:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2441
    jmp addr_60
addr_2441:
    pop rbx
    test rbx, rbx
    jz addr_2443
addr_2442:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2443
    jmp addr_2404
addr_2443:
    pop rax
addr_2444:
    mov qword rax, 2
    push rax
addr_2445:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2446
    jmp addr_1498
addr_2446:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2447:
addr_2448:
    ret
_start:
    mov qword [args_ptr], rsp
    mov qword [ret_stack_rsp], ret_stack
    mov rax, [ret_stack_rsp] 
    mov qword [rax], quit
    jmp addr_2415
quit:
    mov rax, 60
    mov rdi, 0
    syscall
section '.data'
str_0: db 10, 0
str_1: db 83, 116, 114, 105, 110, 103, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 110, 117, 109, 98, 101, 114, 0
str_2: db 99, 111, 117, 108, 100, 32, 110, 111, 116, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 104, 101, 97, 112, 0
str_3: db 72, 69, 65, 80, 32, 77, 65, 80, 0
str_4: db 45, 45, 45, 45, 45, 45, 45, 45, 0
str_5: db 115, 105, 122, 101, 58, 32, 32, 32, 0
str_6: db 79, 98, 106, 101, 99, 116, 0
str_7: db 32, 32, 97, 100, 100, 114, 58, 32, 0
str_8: db 32, 32, 115, 105, 122, 101, 58, 32, 0
str_9: db 117, 115, 101, 100, 58, 32, 0
str_10: db 66, 97, 100, 32, 102, 114, 101, 101, 32, 99, 97, 108, 108, 0
str_11: db 66, 97, 100, 32, 114, 101, 97, 108, 108, 111, 99, 32, 99, 97, 108, 108, 0
str_12: db 27, 91, 49, 59, 51, 49, 109, 0
str_13: db 91, 0
str_14: db 93, 32, 0
str_15: db 27, 91, 48, 59, 48, 109, 0
str_16: db 27, 91, 48, 59, 51, 50, 109, 0
str_17: db 91, 0
str_18: db 93, 32, 0
str_19: db 27, 91, 48, 59, 48, 109, 0
str_20: db 27, 91, 48, 59, 51, 51, 109, 0
str_21: db 91, 0
str_22: db 93, 32, 0
str_23: db 27, 91, 48, 59, 48, 109, 0
str_24: db 91, 0
str_25: db 93, 32, 0
str_26: db 69, 82, 82, 79, 82, 58, 32, 99, 97, 110, 116, 32, 111, 112, 101, 110, 32, 47, 100, 101, 118, 47, 110, 117, 108, 108, 0
str_27: db 47, 100, 101, 118, 47, 110, 117, 108, 108, 0
str_28: db 69, 82, 82, 79, 82, 0
str_29: db 69, 82, 82, 79, 82, 0
str_30: db 67, 77, 68, 0
str_31: db 82, 117, 110, 58, 32, 0
str_32: db 32, 0
str_33: db 67, 77, 68, 0
str_34: db 82, 117, 110, 58, 32, 0
str_35: db 32, 0
str_36: db 66, 97, 100, 32, 97, 114, 103, 0
str_37: db 69, 114, 114, 111, 114, 32, 111, 112, 101, 110, 105, 110, 103, 32, 102, 105, 108, 101, 0
str_38: db 69, 114, 114, 111, 114, 32, 119, 114, 105, 116, 105, 110, 103, 32, 102, 105, 108, 101, 0
str_39: db 69, 114, 114, 111, 114, 32, 114, 101, 97, 100, 105, 110, 103, 32, 102, 105, 108, 101, 0
str_40: db 69, 114, 114, 111, 114, 32, 99, 108, 111, 115, 105, 110, 103, 32, 102, 105, 108, 101, 0
str_41: db 48, 46, 49, 46, 48, 0
str_42: db 115, 108, 97, 109, 32, 99, 111, 109, 112, 105, 108, 101, 114, 32, 118, 0
str_43: db 69, 82, 82, 79, 82, 58, 32, 89, 111, 117, 32, 109, 117, 115, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 97, 110, 32, 111, 112, 101, 114, 97, 116, 105, 111, 110, 0
str_44: db 69, 82, 82, 79, 82, 58, 32, 73, 110, 118, 97, 108, 105, 100, 32, 111, 112, 101, 114, 97, 116, 105, 111, 110, 32, 96, 0
str_45: db 96, 0
str_46: db 69, 82, 82, 79, 82, 58, 32, 89, 111, 117, 32, 109, 117, 115, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 97, 32, 112, 97, 99, 107, 97, 103, 101, 32, 110, 97, 109, 101, 0
str_47: db 115, 112, 97, 107, 105, 103, 32, 116, 104, 101, 32, 83, 108, 97, 109, 32, 112, 97, 99, 107, 97, 103, 101, 32, 109, 97, 110, 97, 103, 101, 114, 32, 118, 0
str_48: db 32, 117, 115, 97, 103, 101, 58, 0
str_49: db 32, 32, 32, 32, 115, 112, 97, 107, 105, 103, 32, 105, 110, 115, 116, 97, 108, 108, 32, 91, 112, 97, 99, 107, 97, 103, 101, 110, 97, 109, 101, 93, 0
str_50: db 32, 32, 32, 32, 115, 112, 97, 107, 105, 103, 32, 114, 101, 109, 111, 118, 101, 32, 32, 91, 112, 97, 99, 107, 97, 103, 101, 110, 97, 109, 101, 93, 0
str_51: db 32, 32, 32, 32, 115, 112, 97, 107, 105, 103, 32, 105, 110, 105, 116, 0
str_52: db 104, 116, 116, 112, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 0
str_53: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 103, 105, 116, 0
str_54: db 99, 108, 111, 110, 101, 0
str_55: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 103, 105, 116, 0
str_56: db 45, 67, 0
str_57: db 112, 117, 108, 108, 0
str_58: db 45, 102, 0
str_59: db 45, 113, 0
str_60: db 47, 0
str_61: db 47, 0
str_62: db 72, 79, 77, 69, 0
str_63: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 98, 105, 110, 47, 115, 112, 97, 107, 105, 103, 0
str_64: db 105, 110, 115, 116, 97, 108, 108, 0
str_65: db 46, 115, 108, 109, 0
str_66: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 115, 108, 97, 109, 0
str_67: db 45, 111, 0
str_68: db 72, 79, 77, 69, 0
str_69: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 108, 105, 98, 47, 0
str_70: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 99, 112, 0
str_71: db 45, 114, 0
str_72: db 72, 79, 77, 69, 0
str_73: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 108, 105, 98, 47, 0
str_74: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 99, 112, 0
str_75: db 115, 114, 99, 0
str_76: db 114, 101, 113, 0
str_77: db 98, 105, 110, 0
str_78: db 108, 105, 98, 0
str_79: db 108, 105, 98, 100, 0
str_80: db 69, 82, 82, 0
str_81: db 105, 110, 118, 97, 108, 105, 100, 32, 99, 111, 109, 109, 97, 110, 100, 58, 32, 96, 0
str_82: db 96, 0
str_83: db 34, 0
str_84: db 72, 79, 77, 69, 0
str_85: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 99, 97, 99, 104, 101, 47, 0
str_86: db 72, 79, 77, 69, 0
str_87: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 108, 105, 98, 47, 0
str_88: db 72, 79, 77, 69, 0
str_89: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 98, 105, 110, 47, 0
str_90: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 109, 107, 100, 105, 114, 0
str_91: db 45, 112, 0
str_92: db 72, 79, 77, 69, 0
str_93: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 99, 97, 99, 104, 101, 47, 0
str_94: db 115, 108, 97, 109, 0
str_95: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 103, 105, 116, 0
str_96: db 99, 108, 111, 110, 101, 0
str_97: db 104, 116, 116, 112, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 115, 108, 97, 109, 45, 108, 97, 110, 103, 47, 115, 108, 97, 109, 0
str_98: db 105, 110, 115, 116, 97, 108, 108, 0
str_99: db 115, 108, 97, 109, 45, 108, 97, 110, 103, 47, 115, 108, 97, 109, 45, 115, 116, 100, 108, 105, 98, 0
str_100: db 105, 110, 115, 116, 97, 108, 108, 0
str_101: db 115, 108, 97, 109, 45, 108, 97, 110, 103, 47, 109, 97, 116, 104, 0
str_102: db 72, 79, 77, 69, 0
str_103: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 99, 97, 99, 104, 101, 47, 115, 108, 97, 109, 47, 111, 108, 100, 47, 115, 108, 97, 109, 46, 112, 121, 0
str_104: db 72, 79, 77, 69, 0
str_105: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 98, 105, 110, 47, 115, 108, 97, 109, 0
str_106: db 72, 79, 77, 69, 0
str_107: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 99, 97, 99, 104, 101, 47, 115, 108, 97, 109, 47, 115, 108, 97, 109, 46, 115, 108, 109, 0
str_108: db 45, 105, 0
str_109: db 45, 111, 0
str_110: db 72, 79, 77, 69, 0
str_111: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 99, 97, 99, 104, 101, 47, 115, 108, 97, 109, 0
str_112: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 114, 109, 0
str_113: db 45, 114, 102, 0
str_114: db 105, 110, 115, 116, 97, 108, 108, 0
str_115: db 115, 108, 97, 109, 45, 108, 97, 110, 103, 47, 115, 112, 97, 107, 105, 103, 0
str_116: db 105, 110, 115, 116, 97, 108, 108, 0
str_117: db 115, 108, 97, 109, 45, 108, 97, 110, 103, 47, 115, 108, 97, 109, 0
str_118: db 72, 79, 77, 69, 0
str_119: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 99, 97, 99, 104, 101, 47, 0
str_120: db 72, 79, 77, 69, 0
str_121: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 108, 105, 98, 47, 0
str_122: db 72, 79, 77, 69, 0
str_123: db 47, 46, 108, 111, 99, 97, 108, 47, 115, 108, 97, 109, 47, 98, 105, 110, 47, 0
str_124: db 47, 117, 115, 114, 47, 98, 105, 110, 47, 109, 107, 100, 105, 114, 0
str_125: db 45, 112, 0
str_126: db 47, 112, 97, 99, 107, 97, 103, 101, 46, 115, 112, 107, 0
str_127: db 69, 82, 82, 79, 82, 58, 32, 78, 111, 32, 112, 97, 99, 107, 97, 103, 101, 32, 102, 105, 108, 101, 32, 105, 110, 32, 114, 101, 112, 111, 0
str_128: db 83, 80, 75, 0
str_129: db 73, 110, 115, 116, 97, 108, 108, 105, 110, 103, 32, 0
str_130: db 105, 110, 105, 116, 0
str_131: db 105, 110, 115, 116, 97, 108, 108, 0
str_132: db 114, 101, 109, 111, 118, 101, 0
str_133: db 100, 101, 118, 101, 108, 111, 112, 0
section '.bss'
args_ptr: rq 1
ret_stack_rsp: rq 1
ret_stack: rb 65536
mem: rb 3198
